{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-g.png","path":"images/favicon-16x16-g.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-g.png","path":"images/favicon-32x32-g.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/header.jpg","path":"images/header.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1554034341878},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1554034341878},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1554034341878},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1554034341878},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1554034341878},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1554034341878},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1554034341878},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1554034341878},{"_id":"themes/next/_config.yml","hash":"27b4c0fdc5e97394d031c0f92f0b8d6a38e86632","modified":1554034341878},{"_id":"themes/next/bower.json","hash":"a8c832da6aad5245052aed7ff26c246f85d68c6c","modified":1554034341878},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1554034341878},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1554034341882},{"_id":"themes/next/package.json","hash":"11a0b27f92da8abf1efbea6e7a0af4271d7bff9e","modified":1554034341886},{"_id":"source/_posts/Hexo-简单使用.md","hash":"9a81e534c9343d52f55adaa3e07915492ea7b31d","modified":1554034341866},{"_id":"source/categories/index.md","hash":"d3831287e75b15a87c8bc095c18d28843d1204fb","modified":1554034341866},{"_id":"source/_posts/Database-Change-Notification.md","hash":"c1580d6ddec7a6c6d46209eca5fd1d824f31e652","modified":1554034341866},{"_id":"source/tags/index.md","hash":"804b80a94e186da388263314a874fabab67826ec","modified":1554034341870},{"_id":"source/_posts/Elasticsearch-查询语法.md","hash":"73f2768e395bc23e34f420e08ceacf679f59baf8","modified":1554036007886},{"_id":"source/_posts/JAVA-类加载机制.md","hash":"dca961577fd268193e03f1adce0eee8c382ee14d","modified":1554034341866},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1554034341878},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1554034341878},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1554034341878},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1554034341878},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1554034341882},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1554034341878},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1554034341882},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1554034341878},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1554034341882},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1554034341882},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1554034341882},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1554034341882},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1554034341882},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1554034341882},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1554034341882},{"_id":"themes/next/languages/ja.yml","hash":"509af6c38458a402d37b9beea3500e3b439aa153","modified":1554034341882},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1554034341882},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1554034341882},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1554034341882},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1554034341882},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1554034341882},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1554034341882},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1554034341882},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1554034341882},{"_id":"themes/next/languages/zh-CN.yml","hash":"4d0b9ee3f059a4b315a55dbb0d44182d08fa9628","modified":1554034341882},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1554034341882},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1554034341882},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1554034341886},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1554034341886},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1554034341886},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1554034341886},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1554034341886},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1554034341886},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1554034341886},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1554034341886},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1554034341886},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1554034341886},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1554034341914},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1554034341914},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1554034341914},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341906},{"_id":"source/_posts/Database-Change-Notification/dba_change_notification_regs_info.png","hash":"9793f53092d2a9fdbed23a39bcd08114373c0478","modified":1554034341866},{"_id":"source/_posts/JAVA-类加载机制/class-loader-uml.jpg","hash":"4a3959154f25dff9c92d07f11473205f922ac9ba","modified":1554034341866},{"_id":"source/_posts/JAVA-类加载机制/class-loader.png","hash":"36f9767c9d7f900d0e52bd00feeb2a917f02386f","modified":1554034341866},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1554034341882},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1554034341882},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1554034341882},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1554034341882},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1554034341882},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1554034341882},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554034341882},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554034341882},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1554034341882},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1554034341882},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1554034341882},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1554034341882},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1554034341882},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1554034341882},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1554034341882},{"_id":"themes/next/layout/_macro/post.swig","hash":"53cd52d587315eeb09e0a3e3122322b61e0efc4c","modified":1554034341882},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1554034341882},{"_id":"themes/next/layout/_partials/footer.swig","hash":"fa0df4eca6161cfe6e14979a4dd2e4d6f25ad320","modified":1554034341882},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1554034341882},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1554034341882},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1554034341882},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1554034341882},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1554034341882},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1554034341886},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1554034341886},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1554034341886},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1554034341886},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1554034341886},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1554034341886},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1554034341886},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1554034341886},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1554034341886},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1554034341886},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1554034341906},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1554034341886},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1554034341886},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1554034341886},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1554034341886},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1d59b968af4b8d147f8bc9bc295d596e41be8348","modified":1554034341886},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1554034341886},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1554034341886},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1554034341886},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1554034341886},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1554034341906},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1554034341906},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1554034341906},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1554034341906},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1554034341906},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1554034341906},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1554034341906},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1554034341906},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1554034341906},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1554034341906},{"_id":"themes/next/source/images/favicon-16x16-g.png","hash":"95397575cf137f63931a532460ea9d373df77c62","modified":1554034341906},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1554034341906},{"_id":"themes/next/source/images/favicon-32x32-g.png","hash":"9fb14cc2e408e6fa7b6be7ebf5ffda3d12c253ed","modified":1554034341906},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1554034341906},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554034341910},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1554034341906},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1554034341910},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1554034341910},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1554034341910},{"_id":"source/_posts/JAVA-类加载机制/class-load-mechanism.png","hash":"69947416e58df2f0595127f03753348e1dd10cff","modified":1554034341866},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341886},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341886},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554034341906},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341902},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341902},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341902},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341906},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554034341906},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1554034341882},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1554034341882},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1554034341882},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1554034341882},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1554034341882},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1554034341882},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1554034341882},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1554034341882},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1554034341882},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1554034341882},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1554034341882},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1554034341882},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1554034341882},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1554034341882},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1554034341882},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1554034341882},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1554034341882},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1554034341882},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"43f70cdc999c66b9c7889a13150ec63e99b1fdd0","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1554034341886},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"88b5a808b6b254c6122444e9dc180d5cc459cb19","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1554034341886},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1554034341886},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1554034341886},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1554034341886},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1554034341886},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1554034341886},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1554034341886},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1554034341886},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1554034341886},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1554034341902},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1554034341902},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1554034341902},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1554034341902},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1554034341906},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1554034341906},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1554034341906},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1554034341906},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1554034341910},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1554034341910},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1554034341910},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1554034341910},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1554034341910},{"_id":"themes/next/source/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1554034341910},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1554034341910},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1554034341910},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1554034341910},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1554034341910},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1554034341914},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1554034341914},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1554034341914},{"_id":"themes/next/source/images/header.jpg","hash":"51cd79df0971a3189be519a852bc5d54e009cea6","modified":1554034341906},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1554034341910},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1554034341886},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1554034341886},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1554034341902},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1554034341902},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1554034341906},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1554034341906},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1554034341910},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1554034341914},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1554034341914},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1554034341910},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1554034341910},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1554034341914},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1554034341898},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"bbe0d111f6451fc04e52719fd538bd0753ec17f9","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1554034341902},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554034341902},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554034341906},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1554034341910},{"_id":"public/content.json","hash":"0ea1a7380c6ffa6411ced7b4d30e3fe7bb96cba0","modified":1554036048336},{"_id":"public/categories/index.html","hash":"b14fbdc49945f27f0f0e082fde4f6ab69b983a70","modified":1554036048354},{"_id":"public/tags/index.html","hash":"632053ba8664d764358cf2a178dddbf08d70ac74","modified":1554036048354},{"_id":"public/archives/index.html","hash":"5dc25c267309e789f1ad5ad70b76ff0ddcadadc3","modified":1554036048355},{"_id":"public/archives/2017/index.html","hash":"b8795eec541f19bac0ce67b96a7318c9cb3ebad0","modified":1554036048355},{"_id":"public/archives/2017/11/index.html","hash":"b74b8f26044a92176bc065216d8fd676139bd095","modified":1554036048355},{"_id":"public/archives/2019/index.html","hash":"667c60d55928b6ca1b44a2dc4de413338c637d58","modified":1554036048355},{"_id":"public/archives/2019/03/index.html","hash":"78ca6b3b4e662d121468ddcda39115b306198399","modified":1554036048355},{"_id":"public/categories/前端/index.html","hash":"a7b49e47d7d55ffb6f289d8aa12cd6666d89e8ca","modified":1554036048355},{"_id":"public/categories/Elastic/index.html","hash":"9211ef88f73dffc4547dc186a16980fc318b8b3c","modified":1554036048355},{"_id":"public/categories/基础知识/index.html","hash":"f780152f6748711b43011dd839201a82ea19ddf0","modified":1554036048355},{"_id":"public/tags/Hexo/index.html","hash":"f638a96e4e6e23a57a7ea74687093e85479c8767","modified":1554036048355},{"_id":"public/tags/JS/index.html","hash":"381d74ef2caacb9091979e9279c092ce53e575c5","modified":1554036048355},{"_id":"public/tags/Oracle/index.html","hash":"9c438c86d89c90b48cb501424f3bd5af166144ac","modified":1554036048355},{"_id":"public/tags/Elastic/index.html","hash":"65b7bbaea91f28ec5ffa97d9c0987e3b893bd753","modified":1554036048355},{"_id":"public/tags/JAVA/index.html","hash":"04b91132d23dc861e88793d3a500497f97584fff","modified":1554036048356},{"_id":"public/tags/JVM/index.html","hash":"c95335bee66fe59798c7e5233ab564b023bb3e3c","modified":1554036048356},{"_id":"public/2019/03/31/Elasticsearch-查询语法/index.html","hash":"5e1de04554599ad7963e7bea8fa72caa53039e42","modified":1554036048356},{"_id":"public/2019/03/28/Database-Change-Notification/index.html","hash":"fdcbddbf1663c45fb83210acad978584c336ca51","modified":1554036048356},{"_id":"public/2019/03/28/Hexo-简单使用/index.html","hash":"b7fe1d56ad4fb3a5ed7252beecb3e62fa0663474","modified":1554036048356},{"_id":"public/2017/11/05/JAVA-类加载机制/index.html","hash":"9daf9909d33b25de24d45fd36f2efac3e206b7c2","modified":1554036048356},{"_id":"public/index.html","hash":"80c179c293e893c01a1c83b073c03747ce7cfe19","modified":1554036048356},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1554036048362},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1554036048362},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1554036048362},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1554036048362},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1554036048362},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1554036048362},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1554036048362},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1554036048362},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1554036048363},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1554036048363},{"_id":"public/images/favicon-16x16-g.png","hash":"95397575cf137f63931a532460ea9d373df77c62","modified":1554036048363},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1554036048363},{"_id":"public/images/favicon-32x32-g.png","hash":"9fb14cc2e408e6fa7b6be7ebf5ffda3d12c253ed","modified":1554036048363},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1554036048363},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554036048363},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1554036048363},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1554036048363},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1554036048363},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1554036048363},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554036048363},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1554036048363},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1554036048364},{"_id":"public/2019/03/28/Database-Change-Notification/dba_change_notification_regs_info.png","hash":"9793f53092d2a9fdbed23a39bcd08114373c0478","modified":1554036048364},{"_id":"public/2017/11/05/JAVA-类加载机制/class-loader-uml.jpg","hash":"4a3959154f25dff9c92d07f11473205f922ac9ba","modified":1554036048364},{"_id":"public/2017/11/05/JAVA-类加载机制/class-loader.png","hash":"36f9767c9d7f900d0e52bd00feeb2a917f02386f","modified":1554036048364},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1554036049007},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1554036049011},{"_id":"public/2017/11/05/JAVA-类加载机制/class-load-mechanism.png","hash":"69947416e58df2f0595127f03753348e1dd10cff","modified":1554036049012},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1554036049016},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1554036049016},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1554036049016},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1554036049016},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1554036049016},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1554036049016},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1554036049016},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1554036049016},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1554036049017},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1554036049017},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1554036049017},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1554036049017},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1554036049017},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1554036049017},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1554036049017},{"_id":"public/css/main.css","hash":"dbe60950dc6482510105752247d7e3742310f1dc","modified":1554036049017},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1554036049018},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1554036049018},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1554036049018},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1554036049018},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1554036049018},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1554036049018},{"_id":"public/images/header.jpg","hash":"51cd79df0971a3189be519a852bc5d54e009cea6","modified":1554036049018},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1554036049018}],"Category":[{"name":"前端","_id":"cjtwwxral0004fyimdpytsn6f"},{"name":"Elastic","_id":"cjtwwxrat0008fyimcc2hwgqv"},{"name":"基础知识","_id":"cjtwwxrav000bfyimfck14txc"}],"Data":[],"Page":[{"title":"categories","date":"2018-08-06T03:45:31.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-08-06 11:45:31\ntype: \"categories\"\n---\n","updated":"2019-03-31T12:12:21.866Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjtwwxrab0001fyimh8ha9p30","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-08-06T03:44:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-08-06 11:44:56\ntype: \"tags\"\n---\n","updated":"2019-03-31T12:12:21.870Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjtwwxrag0003fyimo6bgt80b","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo 简单使用","subtitle":111,"date":"2019-03-28T06:35:10.000Z","_content":"1. npm安装\n\n   ```bash\n   npm install hexo -g\n   ```\n\n2. 查看版本号\n\n   ```bash\n   hexo -v\n   ```\n <!-- more -->\n\n3. 初始化项目\n\n   ```bash\n   hexo init\n   ```\n\n4. 发布\n\n   ```bash\n   hexo g\n   ```\n\n5. 启动\n\n   ```bash\n   hexo server -p 8080\n   ```\n\n6. 创建新页面\n\n   ```bash\n   hexo new post \"***\"\n   ```\n\n7. 发布到github\n\n   安装github发布扩展\n\n   ```bash\n   npm install hexo-deployer-git --save\n   ```\n\n   配置__config.yml，末尾添加\n\n   ```yaml\n   # Deployment\n   ## Docs: https://hexo.io/docs/deployment.html\n   deploy:\n     type: git\n     repository: git@github.com:legatoplay/legatoplay.github.io.git\n     branch: master\n   ```\n\n   发布到github\n\n   ```bash\n   hexo d -g\n   ```\n","source":"_posts/Hexo-简单使用.md","raw":"---\ntitle: Hexo 简单使用\nsubtitle: 111\ndate: 2019-03-28 14:35:10\ntags: [Hexo,JS]\ncategory: 前端\n---\n1. npm安装\n\n   ```bash\n   npm install hexo -g\n   ```\n\n2. 查看版本号\n\n   ```bash\n   hexo -v\n   ```\n <!-- more -->\n\n3. 初始化项目\n\n   ```bash\n   hexo init\n   ```\n\n4. 发布\n\n   ```bash\n   hexo g\n   ```\n\n5. 启动\n\n   ```bash\n   hexo server -p 8080\n   ```\n\n6. 创建新页面\n\n   ```bash\n   hexo new post \"***\"\n   ```\n\n7. 发布到github\n\n   安装github发布扩展\n\n   ```bash\n   npm install hexo-deployer-git --save\n   ```\n\n   配置__config.yml，末尾添加\n\n   ```yaml\n   # Deployment\n   ## Docs: https://hexo.io/docs/deployment.html\n   deploy:\n     type: git\n     repository: git@github.com:legatoplay/legatoplay.github.io.git\n     branch: master\n   ```\n\n   发布到github\n\n   ```bash\n   hexo d -g\n   ```\n","slug":"Hexo-简单使用","published":1,"updated":"2019-03-31T12:12:21.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtwwxra30000fyim3szocoig","content":"<ol>\n<li><p>npm安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看版本号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n</li>\n<li><p>初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 8080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"***\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发布到github</p>\n<p>安装github发布扩展</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>配置__config.yml，末尾添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"string\">git@github.com:legatoplay/legatoplay.github.io.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>发布到github</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<ol>\n<li><p>npm安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看版本号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure></li></ol>","more":"\n<li><p>初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 8080</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"***\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发布到github</p>\n<p>安装github发布扩展</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>配置__config.yml，末尾添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"string\">git@github.com:legatoplay/legatoplay.github.io.git</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>发布到github</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n</li>\n"},{"title":"Database Change Notification 基于流的表变化通知","date":"2019-03-28T07:09:40.000Z","_content":"\n> [jdbc-style官方文档](https://docs.oracle.com/cd/E11882_01/java.112/e16548/dbchgnf.htm#JJDBC28815)\n>\n> [plsql-style官方文档](https://docs.oracle.com/cd/B19306_01/appdev.102/b14258/d_chngnt.htm#CIHFDFDJ)\n\n1. 授权用户\n\n   ```sql\n   CONNECT / AS SYSDBA;\n   GRANT CHANGE NOTIFICATION TO test;\n   GRANT EXECUTE ON DBMS_CHANGE_NOTIFICATION TO test;\n   ```\n<!-- more -->\n2. 修改任务队列线程数\n\n   ```sql\n   CONNECT / AD SYSDBA\n   Rem Enable job queue processes to receive notifications.\n   ALTER SYSTEM SET \"job_queue_processes\"=2;\n   ```\n\n3. 创建表变化接收表\n\n   ```sql\n   CONNECT test/test;\n   Rem Create a table to record notification events\n   CREATE TABLE nfevents(regid number, event_type number);\n    \n   Rem create a table to record changes to registered tables\n   CREATE TABLE nftablechanges(regid number, table_name varchar2(100),\n                               table_operation number);\n    \n   Rem create a table to record rowids of changed rows.\n   CREATE TABLE nfrowchanges(regid number, table_name varchar2(100), \n                             row_id varchar2(30));\n   ```\n\n4. 创建存储过程\n\n   ```sql\n   CREATE OR REPLACE PROCEDURE chnf_callback(ntfnds IN cq_notification$_descriptor) AS\n     regid          NUMBER;\n     tbname         VARCHAR2(60);\n     event_type     NUMBER;\n     numtables      NUMBER;\n     operation_type NUMBER;\n     numrows        NUMBER;\n     row_id         VARCHAR2(20);\n   BEGIN\n     regid      := ntfnds.registration_id;\n     numtables  := ntfnds.numtables;\n     event_type := ntfnds.event_type;\n   \n     INSERT INTO nfevents VALUES (regid, event_type);\n     IF (event_type = DBMS_CHANGE_NOTIFICATION.EVENT_OBJCHANGE) THEN\n       FOR i IN 1 .. numtables LOOP\n         tbname         := ntfnds.table_desc_array(i).table_name;\n         operation_type := ntfnds.table_desc_array(I) . Opflags;\n         INSERT INTO nftablechanges VALUES (regid, tbname, operation_type);\n         /* Send the table name and operation_type to client side listener using UTL_HTTP */\n         /* If interested in the rowids, obtain them as follows */\n         IF (bitand(operation_type, DBMS_CHANGE_NOTIFICATION.ALL_ROWS) = 0) THEN\n           numrows := ntfnds.table_desc_array(i).numrows;\n         ELSE\n           numrows := 0; /* ROWID INFO NOT AVAILABLE */\n         END IF;\n         /* The body of the loop is not executed when numrows is ZERO */\n         FOR j IN 1 .. numrows LOOP\n           Row_id := ntfnds.table_desc_array(i).row_desc_array(j).row_id;\n           INSERT INTO nfrowchanges VALUES (regid, tbname, Row_id);\n           /* optionally Send out row_ids to client side listener using UTL_HTTP; */\n         END LOOP;\n       END LOOP;\n     END IF;\n     COMMIT;\n   END;\n   ```\n\n5. 注册变化通知\n\n   ``` sql\n   DECLARE\n     REGDS      CQ_NOTIFICATION$_REG_INFO;\n     regid      NUMBER;\n     mgr_id     NUMBER;\n     dept_id    NUMBER;\n     qosflags   NUMBER;\n   BEGIN\n    qosflags := DBMS_CHANGE_NOTIFICATION.QOS_RELIABLE +\n            DBMS_CHANGE_NOTIFICATION.QOS_ROWIDS;\n   REGDS := cq_notification$_reg_info ('chnf_callback', qosflags, 0,0,0);\n   regid := DBMS_CHANGE_NOTIFICATION.NEW_REG_START (REGDS);\n   SELECT count(ID) INTO mgr_id FROM table1 WHERE id = 1;\n     SELECT count(id) INTO mgr_id FROM　table2 WHERE id = '1';\n   DBMS_CHANGE_NOTIFICATION.REG_END;\n   END;\n   ```\n\n6. 查看注册状态\n\n   ```sql\n   select * from dba_change_notification_regs;\n   ```\n\n   ![注册结果](Database-Change-Notification/dba_change_notification_regs_info.png)\n\n7. 解除注册命令\n\n   ```sql\n   call DBMS_CHANGE_NOTIFICATION.DEREGISTER (regid IN NUMBER);\n   ```\n\n   ","source":"_posts/Database-Change-Notification.md","raw":"---\ntitle: Database Change Notification 基于流的表变化通知\ndate: 2019-03-28 15:09:40\ntags: [Oracle]\n---\n\n> [jdbc-style官方文档](https://docs.oracle.com/cd/E11882_01/java.112/e16548/dbchgnf.htm#JJDBC28815)\n>\n> [plsql-style官方文档](https://docs.oracle.com/cd/B19306_01/appdev.102/b14258/d_chngnt.htm#CIHFDFDJ)\n\n1. 授权用户\n\n   ```sql\n   CONNECT / AS SYSDBA;\n   GRANT CHANGE NOTIFICATION TO test;\n   GRANT EXECUTE ON DBMS_CHANGE_NOTIFICATION TO test;\n   ```\n<!-- more -->\n2. 修改任务队列线程数\n\n   ```sql\n   CONNECT / AD SYSDBA\n   Rem Enable job queue processes to receive notifications.\n   ALTER SYSTEM SET \"job_queue_processes\"=2;\n   ```\n\n3. 创建表变化接收表\n\n   ```sql\n   CONNECT test/test;\n   Rem Create a table to record notification events\n   CREATE TABLE nfevents(regid number, event_type number);\n    \n   Rem create a table to record changes to registered tables\n   CREATE TABLE nftablechanges(regid number, table_name varchar2(100),\n                               table_operation number);\n    \n   Rem create a table to record rowids of changed rows.\n   CREATE TABLE nfrowchanges(regid number, table_name varchar2(100), \n                             row_id varchar2(30));\n   ```\n\n4. 创建存储过程\n\n   ```sql\n   CREATE OR REPLACE PROCEDURE chnf_callback(ntfnds IN cq_notification$_descriptor) AS\n     regid          NUMBER;\n     tbname         VARCHAR2(60);\n     event_type     NUMBER;\n     numtables      NUMBER;\n     operation_type NUMBER;\n     numrows        NUMBER;\n     row_id         VARCHAR2(20);\n   BEGIN\n     regid      := ntfnds.registration_id;\n     numtables  := ntfnds.numtables;\n     event_type := ntfnds.event_type;\n   \n     INSERT INTO nfevents VALUES (regid, event_type);\n     IF (event_type = DBMS_CHANGE_NOTIFICATION.EVENT_OBJCHANGE) THEN\n       FOR i IN 1 .. numtables LOOP\n         tbname         := ntfnds.table_desc_array(i).table_name;\n         operation_type := ntfnds.table_desc_array(I) . Opflags;\n         INSERT INTO nftablechanges VALUES (regid, tbname, operation_type);\n         /* Send the table name and operation_type to client side listener using UTL_HTTP */\n         /* If interested in the rowids, obtain them as follows */\n         IF (bitand(operation_type, DBMS_CHANGE_NOTIFICATION.ALL_ROWS) = 0) THEN\n           numrows := ntfnds.table_desc_array(i).numrows;\n         ELSE\n           numrows := 0; /* ROWID INFO NOT AVAILABLE */\n         END IF;\n         /* The body of the loop is not executed when numrows is ZERO */\n         FOR j IN 1 .. numrows LOOP\n           Row_id := ntfnds.table_desc_array(i).row_desc_array(j).row_id;\n           INSERT INTO nfrowchanges VALUES (regid, tbname, Row_id);\n           /* optionally Send out row_ids to client side listener using UTL_HTTP; */\n         END LOOP;\n       END LOOP;\n     END IF;\n     COMMIT;\n   END;\n   ```\n\n5. 注册变化通知\n\n   ``` sql\n   DECLARE\n     REGDS      CQ_NOTIFICATION$_REG_INFO;\n     regid      NUMBER;\n     mgr_id     NUMBER;\n     dept_id    NUMBER;\n     qosflags   NUMBER;\n   BEGIN\n    qosflags := DBMS_CHANGE_NOTIFICATION.QOS_RELIABLE +\n            DBMS_CHANGE_NOTIFICATION.QOS_ROWIDS;\n   REGDS := cq_notification$_reg_info ('chnf_callback', qosflags, 0,0,0);\n   regid := DBMS_CHANGE_NOTIFICATION.NEW_REG_START (REGDS);\n   SELECT count(ID) INTO mgr_id FROM table1 WHERE id = 1;\n     SELECT count(id) INTO mgr_id FROM　table2 WHERE id = '1';\n   DBMS_CHANGE_NOTIFICATION.REG_END;\n   END;\n   ```\n\n6. 查看注册状态\n\n   ```sql\n   select * from dba_change_notification_regs;\n   ```\n\n   ![注册结果](Database-Change-Notification/dba_change_notification_regs_info.png)\n\n7. 解除注册命令\n\n   ```sql\n   call DBMS_CHANGE_NOTIFICATION.DEREGISTER (regid IN NUMBER);\n   ```\n\n   ","slug":"Database-Change-Notification","published":1,"updated":"2019-03-31T12:12:21.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtwwxrae0002fyimzdc4jtr9","content":"<blockquote>\n<p><a href=\"https://docs.oracle.com/cd/E11882_01/java.112/e16548/dbchgnf.htm#JJDBC28815\" target=\"_blank\" rel=\"noopener\">jdbc-style官方文档</a></p>\n<p><a href=\"https://docs.oracle.com/cd/B19306_01/appdev.102/b14258/d_chngnt.htm#CIHFDFDJ\" target=\"_blank\" rel=\"noopener\">plsql-style官方文档</a></p>\n</blockquote>\n<ol>\n<li><p>授权用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT / AS SYSDBA;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">CHANGE</span> NOTIFICATION <span class=\"keyword\">TO</span> <span class=\"keyword\">test</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">EXECUTE</span> <span class=\"keyword\">ON</span> DBMS_CHANGE_NOTIFICATION <span class=\"keyword\">TO</span> <span class=\"keyword\">test</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<a id=\"more\"></a>\n<ol start=\"2\">\n<li><p>修改任务队列线程数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT / AD SYSDBA</span><br><span class=\"line\">Rem Enable job queue processes to receive notifications.</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">SYSTEM</span> <span class=\"keyword\">SET</span> <span class=\"string\">\"job_queue_processes\"</span>=<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建表变化接收表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT test/test;</span><br><span class=\"line\">Rem <span class=\"keyword\">Create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> notification <span class=\"keyword\">events</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nfevents(regid <span class=\"built_in\">number</span>, event_type <span class=\"built_in\">number</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">Rem <span class=\"keyword\">create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> changes <span class=\"keyword\">to</span> registered <span class=\"keyword\">tables</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nftablechanges(regid <span class=\"built_in\">number</span>, table_name varchar2(<span class=\"number\">100</span>),</span><br><span class=\"line\">                            table_operation <span class=\"built_in\">number</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">Rem <span class=\"keyword\">create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> rowids <span class=\"keyword\">of</span> <span class=\"keyword\">changed</span> rows.</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nfrowchanges(regid <span class=\"built_in\">number</span>, table_name varchar2(<span class=\"number\">100</span>), </span><br><span class=\"line\">                          row_id varchar2(<span class=\"number\">30</span>));</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">PROCEDURE</span> chnf_callback(ntfnds <span class=\"keyword\">IN</span> cq_notification$_descriptor) <span class=\"keyword\">AS</span></span><br><span class=\"line\">  regid          <span class=\"built_in\">NUMBER</span>;</span><br><span class=\"line\">  tbname         VARCHAR2(60);</span><br><span class=\"line\">  event_type     NUMBER;</span><br><span class=\"line\">  numtables      NUMBER;</span><br><span class=\"line\">  operation_type NUMBER;</span><br><span class=\"line\">  numrows        NUMBER;</span><br><span class=\"line\">  row_id         VARCHAR2(20);</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\">  regid      := ntfnds.registration_id;</span><br><span class=\"line\">  numtables  := ntfnds.numtables;</span><br><span class=\"line\">  event_type := ntfnds.event_type;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nfevents <span class=\"keyword\">VALUES</span> (regid, event_type);</span><br><span class=\"line\">  IF (event_type = DBMS_CHANGE_NOTIFICATION.EVENT_OBJCHANGE) THEN</span><br><span class=\"line\">    FOR i IN 1 .. numtables LOOP</span><br><span class=\"line\">      tbname         := ntfnds.table_desc_array(i).table_name;</span><br><span class=\"line\">      operation_type := ntfnds.table_desc_array(I) . Opflags;</span><br><span class=\"line\">      <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nftablechanges <span class=\"keyword\">VALUES</span> (regid, tbname, operation_type);</span><br><span class=\"line\">      <span class=\"comment\">/* Send the table name and operation_type to client side listener using UTL_HTTP */</span></span><br><span class=\"line\">      <span class=\"comment\">/* If interested in the rowids, obtain them as follows */</span></span><br><span class=\"line\">      IF (bitand(operation_type, DBMS_CHANGE_NOTIFICATION.ALL_ROWS) = 0) THEN</span><br><span class=\"line\">        numrows := ntfnds.table_desc_array(i).numrows;</span><br><span class=\"line\">      ELSE</span><br><span class=\"line\">        numrows := 0; <span class=\"comment\">/* ROWID INFO NOT AVAILABLE */</span></span><br><span class=\"line\">      <span class=\"keyword\">END</span> <span class=\"keyword\">IF</span>;</span><br><span class=\"line\">      <span class=\"comment\">/* The body of the loop is not executed when numrows is ZERO */</span></span><br><span class=\"line\">      FOR j IN 1 .. numrows LOOP</span><br><span class=\"line\">        Row_id := ntfnds.table_desc_array(i).row_desc_array(j).row_id;</span><br><span class=\"line\">        <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nfrowchanges <span class=\"keyword\">VALUES</span> (regid, tbname, Row_id);</span><br><span class=\"line\">        <span class=\"comment\">/* optionally Send out row_ids to client side listener using UTL_HTTP; */</span></span><br><span class=\"line\">      <span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</span><br><span class=\"line\">  <span class=\"keyword\">END</span> <span class=\"keyword\">IF</span>;</span><br><span class=\"line\">  <span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注册变化通知</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span></span><br><span class=\"line\">  REGDS      CQ_NOTIFICATION$_REG_INFO;</span><br><span class=\"line\">  regid      NUMBER;</span><br><span class=\"line\">  mgr_id     NUMBER;</span><br><span class=\"line\">  dept_id    NUMBER;</span><br><span class=\"line\">  qosflags   NUMBER;</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\"> qosflags := DBMS_CHANGE_NOTIFICATION.QOS_RELIABLE +</span><br><span class=\"line\">         DBMS_CHANGE_NOTIFICATION.QOS_ROWIDS;</span><br><span class=\"line\">REGDS := cq_notification$_reg_info ('chnf_callback', qosflags, 0,0,0);</span><br><span class=\"line\">regid := DBMS_CHANGE_NOTIFICATION.NEW_REG_START (REGDS);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(<span class=\"keyword\">ID</span>) <span class=\"keyword\">INTO</span> mgr_id <span class=\"keyword\">FROM</span> table1 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">id</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(<span class=\"keyword\">id</span>) <span class=\"keyword\">INTO</span> mgr_id <span class=\"keyword\">FROM</span>　table2 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">id</span> = <span class=\"string\">'1'</span>;</span><br><span class=\"line\">DBMS_CHANGE_NOTIFICATION.REG_END;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看注册状态</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dba_change_notification_regs;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/03/28/Database-Change-Notification/dba_change_notification_regs_info.png\" alt=\"注册结果\"></p>\n</li>\n<li><p>解除注册命令</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">call</span> DBMS_CHANGE_NOTIFICATION.DEREGISTER (regid <span class=\"keyword\">IN</span> <span class=\"built_in\">NUMBER</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><a href=\"https://docs.oracle.com/cd/E11882_01/java.112/e16548/dbchgnf.htm#JJDBC28815\" target=\"_blank\" rel=\"noopener\">jdbc-style官方文档</a></p>\n<p><a href=\"https://docs.oracle.com/cd/B19306_01/appdev.102/b14258/d_chngnt.htm#CIHFDFDJ\" target=\"_blank\" rel=\"noopener\">plsql-style官方文档</a></p>\n</blockquote>\n<ol>\n<li><p>授权用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT / AS SYSDBA;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">CHANGE</span> NOTIFICATION <span class=\"keyword\">TO</span> <span class=\"keyword\">test</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">EXECUTE</span> <span class=\"keyword\">ON</span> DBMS_CHANGE_NOTIFICATION <span class=\"keyword\">TO</span> <span class=\"keyword\">test</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>","more":"<ol start=\"2\">\n<li><p>修改任务队列线程数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT / AD SYSDBA</span><br><span class=\"line\">Rem Enable job queue processes to receive notifications.</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">SYSTEM</span> <span class=\"keyword\">SET</span> <span class=\"string\">\"job_queue_processes\"</span>=<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建表变化接收表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONNECT test/test;</span><br><span class=\"line\">Rem <span class=\"keyword\">Create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> notification <span class=\"keyword\">events</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nfevents(regid <span class=\"built_in\">number</span>, event_type <span class=\"built_in\">number</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">Rem <span class=\"keyword\">create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> changes <span class=\"keyword\">to</span> registered <span class=\"keyword\">tables</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nftablechanges(regid <span class=\"built_in\">number</span>, table_name varchar2(<span class=\"number\">100</span>),</span><br><span class=\"line\">                            table_operation <span class=\"built_in\">number</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">Rem <span class=\"keyword\">create</span> a <span class=\"keyword\">table</span> <span class=\"keyword\">to</span> <span class=\"built_in\">record</span> rowids <span class=\"keyword\">of</span> <span class=\"keyword\">changed</span> rows.</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> nfrowchanges(regid <span class=\"built_in\">number</span>, table_name varchar2(<span class=\"number\">100</span>), </span><br><span class=\"line\">                          row_id varchar2(<span class=\"number\">30</span>));</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">PROCEDURE</span> chnf_callback(ntfnds <span class=\"keyword\">IN</span> cq_notification$_descriptor) <span class=\"keyword\">AS</span></span><br><span class=\"line\">  regid          <span class=\"built_in\">NUMBER</span>;</span><br><span class=\"line\">  tbname         VARCHAR2(60);</span><br><span class=\"line\">  event_type     NUMBER;</span><br><span class=\"line\">  numtables      NUMBER;</span><br><span class=\"line\">  operation_type NUMBER;</span><br><span class=\"line\">  numrows        NUMBER;</span><br><span class=\"line\">  row_id         VARCHAR2(20);</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\">  regid      := ntfnds.registration_id;</span><br><span class=\"line\">  numtables  := ntfnds.numtables;</span><br><span class=\"line\">  event_type := ntfnds.event_type;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nfevents <span class=\"keyword\">VALUES</span> (regid, event_type);</span><br><span class=\"line\">  IF (event_type = DBMS_CHANGE_NOTIFICATION.EVENT_OBJCHANGE) THEN</span><br><span class=\"line\">    FOR i IN 1 .. numtables LOOP</span><br><span class=\"line\">      tbname         := ntfnds.table_desc_array(i).table_name;</span><br><span class=\"line\">      operation_type := ntfnds.table_desc_array(I) . Opflags;</span><br><span class=\"line\">      <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nftablechanges <span class=\"keyword\">VALUES</span> (regid, tbname, operation_type);</span><br><span class=\"line\">      <span class=\"comment\">/* Send the table name and operation_type to client side listener using UTL_HTTP */</span></span><br><span class=\"line\">      <span class=\"comment\">/* If interested in the rowids, obtain them as follows */</span></span><br><span class=\"line\">      IF (bitand(operation_type, DBMS_CHANGE_NOTIFICATION.ALL_ROWS) = 0) THEN</span><br><span class=\"line\">        numrows := ntfnds.table_desc_array(i).numrows;</span><br><span class=\"line\">      ELSE</span><br><span class=\"line\">        numrows := 0; <span class=\"comment\">/* ROWID INFO NOT AVAILABLE */</span></span><br><span class=\"line\">      <span class=\"keyword\">END</span> <span class=\"keyword\">IF</span>;</span><br><span class=\"line\">      <span class=\"comment\">/* The body of the loop is not executed when numrows is ZERO */</span></span><br><span class=\"line\">      FOR j IN 1 .. numrows LOOP</span><br><span class=\"line\">        Row_id := ntfnds.table_desc_array(i).row_desc_array(j).row_id;</span><br><span class=\"line\">        <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> nfrowchanges <span class=\"keyword\">VALUES</span> (regid, tbname, Row_id);</span><br><span class=\"line\">        <span class=\"comment\">/* optionally Send out row_ids to client side listener using UTL_HTTP; */</span></span><br><span class=\"line\">      <span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</span><br><span class=\"line\">  <span class=\"keyword\">END</span> <span class=\"keyword\">IF</span>;</span><br><span class=\"line\">  <span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注册变化通知</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span></span><br><span class=\"line\">  REGDS      CQ_NOTIFICATION$_REG_INFO;</span><br><span class=\"line\">  regid      NUMBER;</span><br><span class=\"line\">  mgr_id     NUMBER;</span><br><span class=\"line\">  dept_id    NUMBER;</span><br><span class=\"line\">  qosflags   NUMBER;</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\"> qosflags := DBMS_CHANGE_NOTIFICATION.QOS_RELIABLE +</span><br><span class=\"line\">         DBMS_CHANGE_NOTIFICATION.QOS_ROWIDS;</span><br><span class=\"line\">REGDS := cq_notification$_reg_info ('chnf_callback', qosflags, 0,0,0);</span><br><span class=\"line\">regid := DBMS_CHANGE_NOTIFICATION.NEW_REG_START (REGDS);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(<span class=\"keyword\">ID</span>) <span class=\"keyword\">INTO</span> mgr_id <span class=\"keyword\">FROM</span> table1 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">id</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">SELECT</span> <span class=\"keyword\">count</span>(<span class=\"keyword\">id</span>) <span class=\"keyword\">INTO</span> mgr_id <span class=\"keyword\">FROM</span>　table2 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">id</span> = <span class=\"string\">'1'</span>;</span><br><span class=\"line\">DBMS_CHANGE_NOTIFICATION.REG_END;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看注册状态</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dba_change_notification_regs;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/03/28/Database-Change-Notification/dba_change_notification_regs_info.png\" alt=\"注册结果\"></p>\n</li>\n<li><p>解除注册命令</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">call</span> DBMS_CHANGE_NOTIFICATION.DEREGISTER (regid <span class=\"keyword\">IN</span> <span class=\"built_in\">NUMBER</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"Elasticsearch 查询语法","date":"2019-03-31T12:20:43.000Z","_content":"> [英文文档(最新)](https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html)\n> \n> [中文文档(2.x)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html)\n\n# **轻量检索(`URL search`)**\n\n```text\nGET /megacorp/employee/_search?q=last_name:Smith\n```\n\n参数说明[详见](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-uri-request.html#_parameters_3)\n\n# **查询表达式**\n\nQuery-string 搜索通过命令非常方便地进行临时性的即席搜索 ，但它有自身的局限性（参见 [*轻量* 搜索](https://www.elastic.co/guide/cn/elasticsearch/guide/current/search-lite.html)）。Elasticsearch 提供一个丰富灵活的查询语言叫做 *查询表达式* ， 它支持构建更加复杂和健壮的查询。\n\n*领域特定语言* （DSL）， 指定了使用一个 JSON 请求。我们可以像这样重写之前的查询所有 Smith 的搜索 \n\n```json\n{\n    \"query\" : {\n        \"match\" : {\n            \"last_name\" : \"Smith\"\n        }\n    }\n}\n```\n<!-- more -->\n参数说明[详见](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-request-body.html#_parameters_4)\n\n`from`(defualt:0) & `size`(default:10) **分页**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"from\": 10,\n  \"size\": 10 \n}\n```\n\n`sort`**排序**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"sort\" : [\n        { \"post_date\" : {\"order\" : \"asc\"}},\n        \"user\",\n        { \"name\" : \"desc\" },\n        { \"age\" : \"desc\" },\n        \"_score\"\n    ]\n}\n```\n\n排序类型（sort order）\n\n| `asc`  | 正序  |\n| ------ | --- |\n| `desc` | 倒序  |\n\n排序模式 (sort mode option)\n\n| `min`    | 最小值  |\n| -------- | ---- |\n| `max`    | 最大值  |\n| `sum`    | 求和   |\n| `avg`    | 求平均值 |\n| `median` | 中间值  |\n\n`_soucre` **显示字段**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"_source\": [\"account_number\", \"balance\"]\n}\n```\n\n## **match_all 查询**\n\nmatch_all 查询简单的 匹配所有文档。在没有指定查询方式时，它是默认的查询：\n\n```json\n{\n  \"query\": { \"match_all\": {} }\n}\n```\n\n## **match查询**\n\n无论你在任何字段上进行的是全文搜索还是精确查询，`match` 查询是你可用的标准查询。如果你在一个全文字段上使用 `match` 查询，在执行查询前，它将用正确的分析器去分析查询字符串：\n\n```json\n{ \"match\": { \"tweet\": \"About Search\" }}\n```\n\n如果在一个精确值的字段上使用它， 例如数字、日期、布尔或者一个 `not_analyzed` 字符串字段，那么它将会精确匹配给定的值：\n\n```text\n{ \"match\": { \"age\":    26           }}\n{ \"match\": { \"date\":   \"2014-09-01\" }}\n{ \"match\": { \"public\": true         }}\n{ \"match\": { \"tag\":    \"full_text\"  }}\n```\n\n## **multi_match 查询**\n\n`multi_match` 查询可以在多个字段上执行相同的 `match` 查询：\n\n```json\n{\n    \"multi_match\": {\n        \"query\":    \"full text search\",\n        \"fields\":   [ \"title\", \"body\" ]\n    }\n}\n```\n\n## **range查询**\n\n`range` 查询找出那些落在指定区间内的数字或者时间\n\n```json\n{\n    \"range\": {\n        \"age\": {\n            \"gte\":  20,\n            \"lt\":   30\n        }\n    }\n}\n```\n\n被允许的操作符如下：\n\n- `gt` :大于\n- `gte` :大于等于\n- `lt` :小于\n- `lte` :小于等于\n\n## **term查询**\n\n```text\n{ \"term\": { \"age\":    26           }}\n{ \"term\": { \"date\":   \"2014-09-01\" }}\n{ \"term\": { \"public\": true         }}\n{ \"term\": { \"tag\":    \"full_text\"  }}\n```\n\n`term` 查询对于输入的文本不 *分析* ，所以它将给定的值进行精确查询。\n\n## **terms查询**\n\n`terms` 查询和 `term` 查询一样，但它允许你指定多值进行匹配。如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件：\n\n```json\n{ \"terms\": { \"tag\": [ \"search\", \"full_text\", \"nosql\" ] }}\n```\n\n和`term`查询一样，`terms`查询对于输入的文本不分析。它查询那些精确匹配的值（包括在大小写、重音、空格等方面的差异）。\n\n## **exists 查询和 missing 查询**\n\n`exists`查询和`missing`查询被用于查找那些指定字段中有值 (`exists`) 或无值 (`missing`) 的文档。这与SQL中的`IS_NULL`(`missing`) 和`NOT IS_NULL`(`exists`) 在本质上具有共性：\n\n```json\n{\n    \"exists\":   {\n        \"field\":    \"title\"\n    }\n}\n```\n\n这些查询经常用于某个字段有值的情况和某个字段缺值的情况。\n\n# **组合查询**\n\n## **bool查询**\n\n这种查询将多查询组合在一起，成为用户自己想要的布尔查询。它接收以下参数：\n\n`must` like `and`\n\n文档*必须*匹配这些条件才能被包含进来。\n\n`must_not` like `<>`\n\n文档*必须不*匹配这些条件才能被包含进来。\n\n`should` like `or`\n\n如果满足这些语句中的任意语句，将增加`_score`，否则，无任何影响。它们主要用于修正每个文档的相关性得分。\n\n`filter`\n\n*必须*匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。\n\n`由于这是我们看到的第一个包含多个查询的查询，所以有必要讨论一下相关性得分是如何组合的。每一个子查询都独自地计算文档的相关性得分。一旦他们的得分被计算出来，`bool查询就将这些得分进行合并并且返回一个代表整个布尔操作的得分。\n\n`下面的查询用于查找title字段匹配how to make millions并且不被标识为spam的文档。那些被标识为starred或在2014之后的文档，将比另外那些文档拥有更高的排名。如果 _两者_ 都满足，那么它排名将更高：`\n\n```json\n{\n  \"query\": {\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }},\n                { \"range\": { \"date\": { \"gte\": \"2014-01-01\" }}}\n            ]\n        }\n    }\n}\n```\n\n*如果没有`must`语句，那么至少需要能够匹配其中的一条`should`语句。但，如果存在至少一条`must`语句，则对`should`语句的匹配没有要求。*\n\n## **带filter查询**\n\n如果我们不想因为文档的时间而影响得分，可以用`filter`语句来重写前面的例子：\n\n```json\n{\n    \"query\":{\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }}\n            ],\n            \"filter\": {\n              \"range\": { \"date\": { \"gte\": \"2014-01-01\" }} \n            }\n        }\n    }\n}\n```\n\n通过将 range 查询移到 `filter` 语句中，我们将它转成不评分的查询，将不再影响文档的相关性排名。由于它现在是一个不评分的查询，可以使用各种对 filter 查询有效的优化手段来提升性能。\n\n所有查询都可以借鉴这种方式。将查询移到 `bool` 查询的 `filter` 语句中，这样它就自动的转成一个不评分的 filter 了。\n\n如果你需要通过多个不同的标准来过滤你的文档，`bool` 查询本身也可以被用做不评分的查询。简单地将它放置到 `filter` 语句中并在内部构建布尔逻辑：\n\n```json\n{\n    \"query\":{\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }}\n            ],\n            \"filter\": {\n              \"bool\": { \n                  \"must\": [\n                      { \"range\": { \"date\": { \"gte\": \"2014-01-01\" }}},\n                      { \"range\": { \"price\": { \"lte\": 29.99 }}}\n                  ],\n                  \"must_not\": [\n                      { \"term\": { \"category\": \"ebooks\" }}\n                  ]\n              }\n            }\n        }\n    }\n}\n```\n\n# **聚合**\n\n*桶（Buckets）*\n\n满足特定条件的文档的集合\n\n*指标（Metrics）*\n\n对桶内的文档进行统计计算\n\n这就是全部了！每个聚合都是一个或者多个桶和零个或者多个指标的组合。翻译成粗略的SQL语句来解释吧：\n\n```sql\nSELECT COUNT(color) \nFROM table\nGROUP BY color\n```\n\n| [![img](https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/1.png)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-1) | `COUNT(color)`  相当于指标。 |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- |\n| [![img](https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/2.png)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-2) | `GROUP BY color` 相当于桶。 |\n\n桶在概念上类似于 SQL 的分组（GROUP BY），而指标则类似于 `COUNT()` 、 `SUM()` 、 `MAX()` 等统计方法。\n```json\n{\n  \"aggs\": {\n    \"sales_over_time\": {\n      \"date_histogram\": {\n        \"field\": \"processDate\",\n        \"interval\": \"year\",\n        \"format\": \"yyyy\"\n      }\n    }\n  }\n}\n```","source":"_posts/Elasticsearch-查询语法.md","raw":"---\ntitle: Elasticsearch 查询语法\ndate: 2019-03-31 20:20:43\ntags: [Elastic]\ncategory: Elastic\n---\n> [英文文档(最新)](https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html)\n> \n> [中文文档(2.x)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html)\n\n# **轻量检索(`URL search`)**\n\n```text\nGET /megacorp/employee/_search?q=last_name:Smith\n```\n\n参数说明[详见](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-uri-request.html#_parameters_3)\n\n# **查询表达式**\n\nQuery-string 搜索通过命令非常方便地进行临时性的即席搜索 ，但它有自身的局限性（参见 [*轻量* 搜索](https://www.elastic.co/guide/cn/elasticsearch/guide/current/search-lite.html)）。Elasticsearch 提供一个丰富灵活的查询语言叫做 *查询表达式* ， 它支持构建更加复杂和健壮的查询。\n\n*领域特定语言* （DSL）， 指定了使用一个 JSON 请求。我们可以像这样重写之前的查询所有 Smith 的搜索 \n\n```json\n{\n    \"query\" : {\n        \"match\" : {\n            \"last_name\" : \"Smith\"\n        }\n    }\n}\n```\n<!-- more -->\n参数说明[详见](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-request-body.html#_parameters_4)\n\n`from`(defualt:0) & `size`(default:10) **分页**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"from\": 10,\n  \"size\": 10 \n}\n```\n\n`sort`**排序**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"sort\" : [\n        { \"post_date\" : {\"order\" : \"asc\"}},\n        \"user\",\n        { \"name\" : \"desc\" },\n        { \"age\" : \"desc\" },\n        \"_score\"\n    ]\n}\n```\n\n排序类型（sort order）\n\n| `asc`  | 正序  |\n| ------ | --- |\n| `desc` | 倒序  |\n\n排序模式 (sort mode option)\n\n| `min`    | 最小值  |\n| -------- | ---- |\n| `max`    | 最大值  |\n| `sum`    | 求和   |\n| `avg`    | 求平均值 |\n| `median` | 中间值  |\n\n`_soucre` **显示字段**\n\n```json\n{\n  \"query\": { \"match_all\": {} },\n  \"_source\": [\"account_number\", \"balance\"]\n}\n```\n\n## **match_all 查询**\n\nmatch_all 查询简单的 匹配所有文档。在没有指定查询方式时，它是默认的查询：\n\n```json\n{\n  \"query\": { \"match_all\": {} }\n}\n```\n\n## **match查询**\n\n无论你在任何字段上进行的是全文搜索还是精确查询，`match` 查询是你可用的标准查询。如果你在一个全文字段上使用 `match` 查询，在执行查询前，它将用正确的分析器去分析查询字符串：\n\n```json\n{ \"match\": { \"tweet\": \"About Search\" }}\n```\n\n如果在一个精确值的字段上使用它， 例如数字、日期、布尔或者一个 `not_analyzed` 字符串字段，那么它将会精确匹配给定的值：\n\n```text\n{ \"match\": { \"age\":    26           }}\n{ \"match\": { \"date\":   \"2014-09-01\" }}\n{ \"match\": { \"public\": true         }}\n{ \"match\": { \"tag\":    \"full_text\"  }}\n```\n\n## **multi_match 查询**\n\n`multi_match` 查询可以在多个字段上执行相同的 `match` 查询：\n\n```json\n{\n    \"multi_match\": {\n        \"query\":    \"full text search\",\n        \"fields\":   [ \"title\", \"body\" ]\n    }\n}\n```\n\n## **range查询**\n\n`range` 查询找出那些落在指定区间内的数字或者时间\n\n```json\n{\n    \"range\": {\n        \"age\": {\n            \"gte\":  20,\n            \"lt\":   30\n        }\n    }\n}\n```\n\n被允许的操作符如下：\n\n- `gt` :大于\n- `gte` :大于等于\n- `lt` :小于\n- `lte` :小于等于\n\n## **term查询**\n\n```text\n{ \"term\": { \"age\":    26           }}\n{ \"term\": { \"date\":   \"2014-09-01\" }}\n{ \"term\": { \"public\": true         }}\n{ \"term\": { \"tag\":    \"full_text\"  }}\n```\n\n`term` 查询对于输入的文本不 *分析* ，所以它将给定的值进行精确查询。\n\n## **terms查询**\n\n`terms` 查询和 `term` 查询一样，但它允许你指定多值进行匹配。如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件：\n\n```json\n{ \"terms\": { \"tag\": [ \"search\", \"full_text\", \"nosql\" ] }}\n```\n\n和`term`查询一样，`terms`查询对于输入的文本不分析。它查询那些精确匹配的值（包括在大小写、重音、空格等方面的差异）。\n\n## **exists 查询和 missing 查询**\n\n`exists`查询和`missing`查询被用于查找那些指定字段中有值 (`exists`) 或无值 (`missing`) 的文档。这与SQL中的`IS_NULL`(`missing`) 和`NOT IS_NULL`(`exists`) 在本质上具有共性：\n\n```json\n{\n    \"exists\":   {\n        \"field\":    \"title\"\n    }\n}\n```\n\n这些查询经常用于某个字段有值的情况和某个字段缺值的情况。\n\n# **组合查询**\n\n## **bool查询**\n\n这种查询将多查询组合在一起，成为用户自己想要的布尔查询。它接收以下参数：\n\n`must` like `and`\n\n文档*必须*匹配这些条件才能被包含进来。\n\n`must_not` like `<>`\n\n文档*必须不*匹配这些条件才能被包含进来。\n\n`should` like `or`\n\n如果满足这些语句中的任意语句，将增加`_score`，否则，无任何影响。它们主要用于修正每个文档的相关性得分。\n\n`filter`\n\n*必须*匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。\n\n`由于这是我们看到的第一个包含多个查询的查询，所以有必要讨论一下相关性得分是如何组合的。每一个子查询都独自地计算文档的相关性得分。一旦他们的得分被计算出来，`bool查询就将这些得分进行合并并且返回一个代表整个布尔操作的得分。\n\n`下面的查询用于查找title字段匹配how to make millions并且不被标识为spam的文档。那些被标识为starred或在2014之后的文档，将比另外那些文档拥有更高的排名。如果 _两者_ 都满足，那么它排名将更高：`\n\n```json\n{\n  \"query\": {\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }},\n                { \"range\": { \"date\": { \"gte\": \"2014-01-01\" }}}\n            ]\n        }\n    }\n}\n```\n\n*如果没有`must`语句，那么至少需要能够匹配其中的一条`should`语句。但，如果存在至少一条`must`语句，则对`should`语句的匹配没有要求。*\n\n## **带filter查询**\n\n如果我们不想因为文档的时间而影响得分，可以用`filter`语句来重写前面的例子：\n\n```json\n{\n    \"query\":{\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }}\n            ],\n            \"filter\": {\n              \"range\": { \"date\": { \"gte\": \"2014-01-01\" }} \n            }\n        }\n    }\n}\n```\n\n通过将 range 查询移到 `filter` 语句中，我们将它转成不评分的查询，将不再影响文档的相关性排名。由于它现在是一个不评分的查询，可以使用各种对 filter 查询有效的优化手段来提升性能。\n\n所有查询都可以借鉴这种方式。将查询移到 `bool` 查询的 `filter` 语句中，这样它就自动的转成一个不评分的 filter 了。\n\n如果你需要通过多个不同的标准来过滤你的文档，`bool` 查询本身也可以被用做不评分的查询。简单地将它放置到 `filter` 语句中并在内部构建布尔逻辑：\n\n```json\n{\n    \"query\":{\n        \"bool\": {\n            \"must\":     { \"match\": { \"title\": \"how to make millions\" }},\n            \"must_not\": { \"match\": { \"tag\":   \"spam\" }},\n            \"should\": [\n                { \"match\": { \"tag\": \"starred\" }}\n            ],\n            \"filter\": {\n              \"bool\": { \n                  \"must\": [\n                      { \"range\": { \"date\": { \"gte\": \"2014-01-01\" }}},\n                      { \"range\": { \"price\": { \"lte\": 29.99 }}}\n                  ],\n                  \"must_not\": [\n                      { \"term\": { \"category\": \"ebooks\" }}\n                  ]\n              }\n            }\n        }\n    }\n}\n```\n\n# **聚合**\n\n*桶（Buckets）*\n\n满足特定条件的文档的集合\n\n*指标（Metrics）*\n\n对桶内的文档进行统计计算\n\n这就是全部了！每个聚合都是一个或者多个桶和零个或者多个指标的组合。翻译成粗略的SQL语句来解释吧：\n\n```sql\nSELECT COUNT(color) \nFROM table\nGROUP BY color\n```\n\n| [![img](https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/1.png)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-1) | `COUNT(color)`  相当于指标。 |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- |\n| [![img](https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/2.png)](https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-2) | `GROUP BY color` 相当于桶。 |\n\n桶在概念上类似于 SQL 的分组（GROUP BY），而指标则类似于 `COUNT()` 、 `SUM()` 、 `MAX()` 等统计方法。\n```json\n{\n  \"aggs\": {\n    \"sales_over_time\": {\n      \"date_histogram\": {\n        \"field\": \"processDate\",\n        \"interval\": \"year\",\n        \"format\": \"yyyy\"\n      }\n    }\n  }\n}\n```","slug":"Elasticsearch-查询语法","published":1,"updated":"2019-03-31T12:40:07.886Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtwwxrap0006fyimxpba0082","content":"<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html\" target=\"_blank\" rel=\"noopener\">英文文档(最新)</a></p>\n<p><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html\" target=\"_blank\" rel=\"noopener\">中文文档(2.x)</a></p>\n</blockquote>\n<h1 id=\"轻量检索-URL-search\"><a href=\"#轻量检索-URL-search\" class=\"headerlink\" title=\"轻量检索(URL search)\"></a><strong>轻量检索(<code>URL search</code>)</strong></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /megacorp/employee/_search?q=last_name:Smith</span><br></pre></td></tr></table></figure>\n<p>参数说明<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-uri-request.html#_parameters_3\" target=\"_blank\" rel=\"noopener\">详见</a></p>\n<h1 id=\"查询表达式\"><a href=\"#查询表达式\" class=\"headerlink\" title=\"查询表达式\"></a><strong>查询表达式</strong></h1><p>Query-string 搜索通过命令非常方便地进行临时性的即席搜索 ，但它有自身的局限性（参见 <a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/search-lite.html\" target=\"_blank\" rel=\"noopener\"><em>轻量</em> 搜索</a>）。Elasticsearch 提供一个丰富灵活的查询语言叫做 <em>查询表达式</em> ， 它支持构建更加复杂和健壮的查询。</p>\n<p><em>领域特定语言</em> （DSL）， 指定了使用一个 JSON 请求。我们可以像这样重写之前的查询所有 Smith 的搜索 </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span> : &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"match\"</span> : &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"last_name\"</span> : <span class=\"string\">\"Smith\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>参数说明<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-request-body.html#_parameters_4\" target=\"_blank\" rel=\"noopener\">详见</a></p>\n<p><code>from</code>(defualt:0) &amp; <code>size</code>(default:10) <strong>分页</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"from\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"size\"</span>: <span class=\"number\">10</span> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>sort</code><strong>排序</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"sort\"</span> : [</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"post_date\"</span> : &#123;<span class=\"attr\">\"order\"</span> : <span class=\"string\">\"asc\"</span>&#125;&#125;,</span><br><span class=\"line\">        <span class=\"string\">\"user\"</span>,</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"desc\"</span> &#125;,</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"age\"</span> : <span class=\"string\">\"desc\"</span> &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"_score\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>排序类型（sort order）</p>\n<table>\n<thead>\n<tr>\n<th><code>asc</code></th>\n<th>正序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>desc</code></td>\n<td>倒序</td>\n</tr>\n</tbody>\n</table>\n<p>排序模式 (sort mode option)</p>\n<table>\n<thead>\n<tr>\n<th><code>min</code></th>\n<th>最小值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>max</code></td>\n<td>最大值</td>\n</tr>\n<tr>\n<td><code>sum</code></td>\n<td>求和</td>\n</tr>\n<tr>\n<td><code>avg</code></td>\n<td>求平均值</td>\n</tr>\n<tr>\n<td><code>median</code></td>\n<td>中间值</td>\n</tr>\n</tbody>\n</table>\n<p><code>_soucre</code> <strong>显示字段</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"_source\"</span>: [<span class=\"string\">\"account_number\"</span>, <span class=\"string\">\"balance\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"match-all-查询\"><a href=\"#match-all-查询\" class=\"headerlink\" title=\"match_all 查询\"></a><strong>match_all 查询</strong></h2><p>match_all 查询简单的 匹配所有文档。在没有指定查询方式时，它是默认的查询：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"match查询\"><a href=\"#match查询\" class=\"headerlink\" title=\"match查询\"></a><strong>match查询</strong></h2><p>无论你在任何字段上进行的是全文搜索还是精确查询，<code>match</code> 查询是你可用的标准查询。如果你在一个全文字段上使用 <code>match</code> 查询，在执行查询前，它将用正确的分析器去分析查询字符串：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tweet\"</span>: <span class=\"string\">\"About Search\"</span> &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>如果在一个精确值的字段上使用它， 例如数字、日期、布尔或者一个 <code>not_analyzed</code> 字符串字段，那么它将会精确匹配给定的值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;age&quot;:    26           &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;date&quot;:   &quot;2014-09-01&quot; &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;public&quot;: true         &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;tag&quot;:    &quot;full_text&quot;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"multi-match-查询\"><a href=\"#multi-match-查询\" class=\"headerlink\" title=\"multi_match 查询\"></a><strong>multi_match 查询</strong></h2><p><code>multi_match</code> 查询可以在多个字段上执行相同的 <code>match</code> 查询：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"multi_match\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"query\"</span>:    <span class=\"string\">\"full text search\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fields\"</span>:   [ <span class=\"string\">\"title\"</span>, <span class=\"string\">\"body\"</span> ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"range查询\"><a href=\"#range查询\" class=\"headerlink\" title=\"range查询\"></a><strong>range查询</strong></h2><p><code>range</code> 查询找出那些落在指定区间内的数字或者时间</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"range\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"age\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"gte\"</span>:  <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"lt\"</span>:   <span class=\"number\">30</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>被允许的操作符如下：</p>\n<ul>\n<li><code>gt</code> :大于</li>\n<li><code>gte</code> :大于等于</li>\n<li><code>lt</code> :小于</li>\n<li><code>lte</code> :小于等于</li>\n</ul>\n<h2 id=\"term查询\"><a href=\"#term查询\" class=\"headerlink\" title=\"term查询\"></a><strong>term查询</strong></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;age&quot;:    26           &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;date&quot;:   &quot;2014-09-01&quot; &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;public&quot;: true         &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;tag&quot;:    &quot;full_text&quot;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>term</code> 查询对于输入的文本不 <em>分析</em> ，所以它将给定的值进行精确查询。</p>\n<h2 id=\"terms查询\"><a href=\"#terms查询\" class=\"headerlink\" title=\"terms查询\"></a><strong>terms查询</strong></h2><p><code>terms</code> 查询和 <code>term</code> 查询一样，但它允许你指定多值进行匹配。如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"attr\">\"terms\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: [ <span class=\"string\">\"search\"</span>, <span class=\"string\">\"full_text\"</span>, <span class=\"string\">\"nosql\"</span> ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>和<code>term</code>查询一样，<code>terms</code>查询对于输入的文本不分析。它查询那些精确匹配的值（包括在大小写、重音、空格等方面的差异）。</p>\n<h2 id=\"exists-查询和-missing-查询\"><a href=\"#exists-查询和-missing-查询\" class=\"headerlink\" title=\"exists 查询和 missing 查询\"></a><strong>exists 查询和 missing 查询</strong></h2><p><code>exists</code>查询和<code>missing</code>查询被用于查找那些指定字段中有值 (<code>exists</code>) 或无值 (<code>missing</code>) 的文档。这与SQL中的<code>IS_NULL</code>(<code>missing</code>) 和<code>NOT IS_NULL</code>(<code>exists</code>) 在本质上具有共性：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"exists\"</span>:   &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"field\"</span>:    <span class=\"string\">\"title\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这些查询经常用于某个字段有值的情况和某个字段缺值的情况。</p>\n<h1 id=\"组合查询\"><a href=\"#组合查询\" class=\"headerlink\" title=\"组合查询\"></a><strong>组合查询</strong></h1><h2 id=\"bool查询\"><a href=\"#bool查询\" class=\"headerlink\" title=\"bool查询\"></a><strong>bool查询</strong></h2><p>这种查询将多查询组合在一起，成为用户自己想要的布尔查询。它接收以下参数：</p>\n<p><code>must</code> like <code>and</code></p>\n<p>文档<em>必须</em>匹配这些条件才能被包含进来。</p>\n<p><code>must_not</code> like <code>&lt;&gt;</code></p>\n<p>文档<em>必须不</em>匹配这些条件才能被包含进来。</p>\n<p><code>should</code> like <code>or</code></p>\n<p>如果满足这些语句中的任意语句，将增加<code>_score</code>，否则，无任何影响。它们主要用于修正每个文档的相关性得分。</p>\n<p><code>filter</code></p>\n<p><em>必须</em>匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。</p>\n<p><code>由于这是我们看到的第一个包含多个查询的查询，所以有必要讨论一下相关性得分是如何组合的。每一个子查询都独自地计算文档的相关性得分。一旦他们的得分被计算出来，</code>bool查询就将这些得分进行合并并且返回一个代表整个布尔操作的得分。</p>\n<p><code>下面的查询用于查找title字段匹配how to make millions并且不被标识为spam的文档。那些被标识为starred或在2014之后的文档，将比另外那些文档拥有更高的排名。如果 _两者_ 都满足，那么它排名将更高：</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;,</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125;&#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>如果没有<code>must</code>语句，那么至少需要能够匹配其中的一条<code>should</code>语句。但，如果存在至少一条<code>must</code>语句，则对<code>should</code>语句的匹配没有要求。</em></p>\n<h2 id=\"带filter查询\"><a href=\"#带filter查询\" class=\"headerlink\" title=\"带filter查询\"></a><strong>带filter查询</strong></h2><p>如果我们不想因为文档的时间而影响得分，可以用<code>filter</code>语句来重写前面的例子：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"filter\"</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过将 range 查询移到 <code>filter</code> 语句中，我们将它转成不评分的查询，将不再影响文档的相关性排名。由于它现在是一个不评分的查询，可以使用各种对 filter 查询有效的优化手段来提升性能。</p>\n<p>所有查询都可以借鉴这种方式。将查询移到 <code>bool</code> 查询的 <code>filter</code> 语句中，这样它就自动的转成一个不评分的 filter 了。</p>\n<p>如果你需要通过多个不同的标准来过滤你的文档，<code>bool</code> 查询本身也可以被用做不评分的查询。简单地将它放置到 <code>filter</code> 语句中并在内部构建布尔逻辑：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"filter\"</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">\"bool\"</span>: &#123; </span><br><span class=\"line\">                  <span class=\"attr\">\"must\"</span>: [</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125;&#125;,</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"price\"</span>: &#123; <span class=\"attr\">\"lte\"</span>: <span class=\"number\">29.99</span> &#125;&#125;&#125;</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                  <span class=\"attr\">\"must_not\"</span>: [</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"term\"</span>: &#123; <span class=\"attr\">\"category\"</span>: <span class=\"string\">\"ebooks\"</span> &#125;&#125;</span><br><span class=\"line\">                  ]</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"聚合\"><a href=\"#聚合\" class=\"headerlink\" title=\"聚合\"></a><strong>聚合</strong></h1><p><em>桶（Buckets）</em></p>\n<p>满足特定条件的文档的集合</p>\n<p><em>指标（Metrics）</em></p>\n<p>对桶内的文档进行统计计算</p>\n<p>这就是全部了！每个聚合都是一个或者多个桶和零个或者多个指标的组合。翻译成粗略的SQL语句来解释吧：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(color) </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> color</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/1.png\" alt=\"img\"></a></th>\n<th><code>COUNT(color)</code>  相当于指标。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-2\" target=\"_blank\" rel=\"noopener\"><img src=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/2.png\" alt=\"img\"></a></td>\n<td><code>GROUP BY color</code> 相当于桶。</td>\n</tr>\n</tbody>\n</table>\n<p>桶在概念上类似于 SQL 的分组（GROUP BY），而指标则类似于 <code>COUNT()</code> 、 <code>SUM()</code> 、 <code>MAX()</code> 等统计方法。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"aggs\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"sales_over_time\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"date_histogram\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"field\"</span>: <span class=\"string\">\"processDate\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"interval\"</span>: <span class=\"string\">\"year\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"format\"</span>: <span class=\"string\">\"yyyy\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html\" target=\"_blank\" rel=\"noopener\">英文文档(最新)</a></p>\n<p><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html\" target=\"_blank\" rel=\"noopener\">中文文档(2.x)</a></p>\n</blockquote>\n<h1 id=\"轻量检索-URL-search\"><a href=\"#轻量检索-URL-search\" class=\"headerlink\" title=\"轻量检索(URL search)\"></a><strong>轻量检索(<code>URL search</code>)</strong></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /megacorp/employee/_search?q=last_name:Smith</span><br></pre></td></tr></table></figure>\n<p>参数说明<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-uri-request.html#_parameters_3\" target=\"_blank\" rel=\"noopener\">详见</a></p>\n<h1 id=\"查询表达式\"><a href=\"#查询表达式\" class=\"headerlink\" title=\"查询表达式\"></a><strong>查询表达式</strong></h1><p>Query-string 搜索通过命令非常方便地进行临时性的即席搜索 ，但它有自身的局限性（参见 <a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/search-lite.html\" target=\"_blank\" rel=\"noopener\"><em>轻量</em> 搜索</a>）。Elasticsearch 提供一个丰富灵活的查询语言叫做 <em>查询表达式</em> ， 它支持构建更加复杂和健壮的查询。</p>\n<p><em>领域特定语言</em> （DSL）， 指定了使用一个 JSON 请求。我们可以像这样重写之前的查询所有 Smith 的搜索 </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span> : &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"match\"</span> : &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"last_name\"</span> : <span class=\"string\">\"Smith\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p>参数说明<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-request-body.html#_parameters_4\" target=\"_blank\" rel=\"noopener\">详见</a></p>\n<p><code>from</code>(defualt:0) &amp; <code>size</code>(default:10) <strong>分页</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"from\"</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"size\"</span>: <span class=\"number\">10</span> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>sort</code><strong>排序</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"sort\"</span> : [</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"post_date\"</span> : &#123;<span class=\"attr\">\"order\"</span> : <span class=\"string\">\"asc\"</span>&#125;&#125;,</span><br><span class=\"line\">        <span class=\"string\">\"user\"</span>,</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"desc\"</span> &#125;,</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"age\"</span> : <span class=\"string\">\"desc\"</span> &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"_score\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>排序类型（sort order）</p>\n<table>\n<thead>\n<tr>\n<th><code>asc</code></th>\n<th>正序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>desc</code></td>\n<td>倒序</td>\n</tr>\n</tbody>\n</table>\n<p>排序模式 (sort mode option)</p>\n<table>\n<thead>\n<tr>\n<th><code>min</code></th>\n<th>最小值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>max</code></td>\n<td>最大值</td>\n</tr>\n<tr>\n<td><code>sum</code></td>\n<td>求和</td>\n</tr>\n<tr>\n<td><code>avg</code></td>\n<td>求平均值</td>\n</tr>\n<tr>\n<td><code>median</code></td>\n<td>中间值</td>\n</tr>\n</tbody>\n</table>\n<p><code>_soucre</code> <strong>显示字段</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"_source\"</span>: [<span class=\"string\">\"account_number\"</span>, <span class=\"string\">\"balance\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"match-all-查询\"><a href=\"#match-all-查询\" class=\"headerlink\" title=\"match_all 查询\"></a><strong>match_all 查询</strong></h2><p>match_all 查询简单的 匹配所有文档。在没有指定查询方式时，它是默认的查询：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123; <span class=\"attr\">\"match_all\"</span>: &#123;&#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"match查询\"><a href=\"#match查询\" class=\"headerlink\" title=\"match查询\"></a><strong>match查询</strong></h2><p>无论你在任何字段上进行的是全文搜索还是精确查询，<code>match</code> 查询是你可用的标准查询。如果你在一个全文字段上使用 <code>match</code> 查询，在执行查询前，它将用正确的分析器去分析查询字符串：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tweet\"</span>: <span class=\"string\">\"About Search\"</span> &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>如果在一个精确值的字段上使用它， 例如数字、日期、布尔或者一个 <code>not_analyzed</code> 字符串字段，那么它将会精确匹配给定的值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;age&quot;:    26           &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;date&quot;:   &quot;2014-09-01&quot; &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;public&quot;: true         &#125;&#125;</span><br><span class=\"line\">&#123; &quot;match&quot;: &#123; &quot;tag&quot;:    &quot;full_text&quot;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"multi-match-查询\"><a href=\"#multi-match-查询\" class=\"headerlink\" title=\"multi_match 查询\"></a><strong>multi_match 查询</strong></h2><p><code>multi_match</code> 查询可以在多个字段上执行相同的 <code>match</code> 查询：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"multi_match\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"query\"</span>:    <span class=\"string\">\"full text search\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fields\"</span>:   [ <span class=\"string\">\"title\"</span>, <span class=\"string\">\"body\"</span> ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"range查询\"><a href=\"#range查询\" class=\"headerlink\" title=\"range查询\"></a><strong>range查询</strong></h2><p><code>range</code> 查询找出那些落在指定区间内的数字或者时间</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"range\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"age\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"gte\"</span>:  <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"lt\"</span>:   <span class=\"number\">30</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>被允许的操作符如下：</p>\n<ul>\n<li><code>gt</code> :大于</li>\n<li><code>gte</code> :大于等于</li>\n<li><code>lt</code> :小于</li>\n<li><code>lte</code> :小于等于</li>\n</ul>\n<h2 id=\"term查询\"><a href=\"#term查询\" class=\"headerlink\" title=\"term查询\"></a><strong>term查询</strong></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;age&quot;:    26           &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;date&quot;:   &quot;2014-09-01&quot; &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;public&quot;: true         &#125;&#125;</span><br><span class=\"line\">&#123; &quot;term&quot;: &#123; &quot;tag&quot;:    &quot;full_text&quot;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>term</code> 查询对于输入的文本不 <em>分析</em> ，所以它将给定的值进行精确查询。</p>\n<h2 id=\"terms查询\"><a href=\"#terms查询\" class=\"headerlink\" title=\"terms查询\"></a><strong>terms查询</strong></h2><p><code>terms</code> 查询和 <code>term</code> 查询一样，但它允许你指定多值进行匹配。如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; <span class=\"attr\">\"terms\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: [ <span class=\"string\">\"search\"</span>, <span class=\"string\">\"full_text\"</span>, <span class=\"string\">\"nosql\"</span> ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>和<code>term</code>查询一样，<code>terms</code>查询对于输入的文本不分析。它查询那些精确匹配的值（包括在大小写、重音、空格等方面的差异）。</p>\n<h2 id=\"exists-查询和-missing-查询\"><a href=\"#exists-查询和-missing-查询\" class=\"headerlink\" title=\"exists 查询和 missing 查询\"></a><strong>exists 查询和 missing 查询</strong></h2><p><code>exists</code>查询和<code>missing</code>查询被用于查找那些指定字段中有值 (<code>exists</code>) 或无值 (<code>missing</code>) 的文档。这与SQL中的<code>IS_NULL</code>(<code>missing</code>) 和<code>NOT IS_NULL</code>(<code>exists</code>) 在本质上具有共性：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"exists\"</span>:   &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"field\"</span>:    <span class=\"string\">\"title\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这些查询经常用于某个字段有值的情况和某个字段缺值的情况。</p>\n<h1 id=\"组合查询\"><a href=\"#组合查询\" class=\"headerlink\" title=\"组合查询\"></a><strong>组合查询</strong></h1><h2 id=\"bool查询\"><a href=\"#bool查询\" class=\"headerlink\" title=\"bool查询\"></a><strong>bool查询</strong></h2><p>这种查询将多查询组合在一起，成为用户自己想要的布尔查询。它接收以下参数：</p>\n<p><code>must</code> like <code>and</code></p>\n<p>文档<em>必须</em>匹配这些条件才能被包含进来。</p>\n<p><code>must_not</code> like <code>&lt;&gt;</code></p>\n<p>文档<em>必须不</em>匹配这些条件才能被包含进来。</p>\n<p><code>should</code> like <code>or</code></p>\n<p>如果满足这些语句中的任意语句，将增加<code>_score</code>，否则，无任何影响。它们主要用于修正每个文档的相关性得分。</p>\n<p><code>filter</code></p>\n<p><em>必须</em>匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。</p>\n<p><code>由于这是我们看到的第一个包含多个查询的查询，所以有必要讨论一下相关性得分是如何组合的。每一个子查询都独自地计算文档的相关性得分。一旦他们的得分被计算出来，</code>bool查询就将这些得分进行合并并且返回一个代表整个布尔操作的得分。</p>\n<p><code>下面的查询用于查找title字段匹配how to make millions并且不被标识为spam的文档。那些被标识为starred或在2014之后的文档，将比另外那些文档拥有更高的排名。如果 _两者_ 都满足，那么它排名将更高：</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"query\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;,</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125;&#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><em>如果没有<code>must</code>语句，那么至少需要能够匹配其中的一条<code>should</code>语句。但，如果存在至少一条<code>must</code>语句，则对<code>should</code>语句的匹配没有要求。</em></p>\n<h2 id=\"带filter查询\"><a href=\"#带filter查询\" class=\"headerlink\" title=\"带filter查询\"></a><strong>带filter查询</strong></h2><p>如果我们不想因为文档的时间而影响得分，可以用<code>filter</code>语句来重写前面的例子：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"filter\"</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过将 range 查询移到 <code>filter</code> 语句中，我们将它转成不评分的查询，将不再影响文档的相关性排名。由于它现在是一个不评分的查询，可以使用各种对 filter 查询有效的优化手段来提升性能。</p>\n<p>所有查询都可以借鉴这种方式。将查询移到 <code>bool</code> 查询的 <code>filter</code> 语句中，这样它就自动的转成一个不评分的 filter 了。</p>\n<p>如果你需要通过多个不同的标准来过滤你的文档，<code>bool</code> 查询本身也可以被用做不评分的查询。简单地将它放置到 <code>filter</code> 语句中并在内部构建布尔逻辑：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"query\"</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"bool\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"must\"</span>:     &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"how to make millions\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"must_not\"</span>: &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>:   <span class=\"string\">\"spam\"</span> &#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">\"should\"</span>: [</span><br><span class=\"line\">                &#123; <span class=\"attr\">\"match\"</span>: &#123; <span class=\"attr\">\"tag\"</span>: <span class=\"string\">\"starred\"</span> &#125;&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"filter\"</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">\"bool\"</span>: &#123; </span><br><span class=\"line\">                  <span class=\"attr\">\"must\"</span>: [</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"date\"</span>: &#123; <span class=\"attr\">\"gte\"</span>: <span class=\"string\">\"2014-01-01\"</span> &#125;&#125;&#125;,</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"range\"</span>: &#123; <span class=\"attr\">\"price\"</span>: &#123; <span class=\"attr\">\"lte\"</span>: <span class=\"number\">29.99</span> &#125;&#125;&#125;</span><br><span class=\"line\">                  ],</span><br><span class=\"line\">                  <span class=\"attr\">\"must_not\"</span>: [</span><br><span class=\"line\">                      &#123; <span class=\"attr\">\"term\"</span>: &#123; <span class=\"attr\">\"category\"</span>: <span class=\"string\">\"ebooks\"</span> &#125;&#125;</span><br><span class=\"line\">                  ]</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"聚合\"><a href=\"#聚合\" class=\"headerlink\" title=\"聚合\"></a><strong>聚合</strong></h1><p><em>桶（Buckets）</em></p>\n<p>满足特定条件的文档的集合</p>\n<p><em>指标（Metrics）</em></p>\n<p>对桶内的文档进行统计计算</p>\n<p>这就是全部了！每个聚合都是一个或者多个桶和零个或者多个指标的组合。翻译成粗略的SQL语句来解释吧：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(color) </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">table</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> color</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-1\" target=\"_blank\" rel=\"noopener\"><img src=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/1.png\" alt=\"img\"></a></th>\n<th><code>COUNT(color)</code>  相当于指标。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/aggs-high-level.html#CO183-2\" target=\"_blank\" rel=\"noopener\"><img src=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/icons/callouts/2.png\" alt=\"img\"></a></td>\n<td><code>GROUP BY color</code> 相当于桶。</td>\n</tr>\n</tbody>\n</table>\n<p>桶在概念上类似于 SQL 的分组（GROUP BY），而指标则类似于 <code>COUNT()</code> 、 <code>SUM()</code> 、 <code>MAX()</code> 等统计方法。<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"aggs\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"sales_over_time\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"date_histogram\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"field\"</span>: <span class=\"string\">\"processDate\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"interval\"</span>: <span class=\"string\">\"year\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"format\"</span>: <span class=\"string\">\"yyyy\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"JAVA 类加载机制","date":"2017-11-05T06:10:10.000Z","_content":"> 摘自：[https://blog.csdn.net/qq_16216221/article/details/71600535](https://blog.csdn.net/qq_16216221/article/details/71600535)  \n摘自：[http://www.importnew.com/25295.html](http://www.importnew.com/25295.html)\n摘自：[https://blog.csdn.net/noaman_wgs/article/details/74489549](https://blog.csdn.net/noaman_wgs/article/details/74489549)  \n\n# 一、概述\n类加载是Java程序运行的第一步，研究类的加载有助于了解JVM执行过程，并指导开发者采取更有效的措施配合程序执行，对理解java虚拟机的连接模型和java语言的动态性都有很大帮助。   \n由于Java的跨平台性，经过编译的Java源程序并不是一个可执行程序，而是一个或多个类文件。当Java程序需要使用某个类时，JVM会确保这个类已经被加载、连接（验证、准备和解析）和初始化。  \nJVM中类的装载是由类加载器（ClassLoader）和它的子类来实现的，Java中的类加载器是一个重要的Java运行时系统组件，它负责在运行时查找和装入类文件中的类。  \n<!-- more -->\n# 二、类加载机制  \n![类的加载过程](JAVA-类加载机制/class-load-mechanism.png)  \n## 2.1. 加载  \n  加载主要是将.class文件（并不一定是.class。可以是ZIP包，网络中获取）中的二进制字节流读入到JVM中。 \n    在加载阶段，JVM需要完成3件事： \n    1）通过类的全限定名获取该类的二进制字节流； \n    2）将字节流所代表的静态存储结构转化为方法区的运行时数据结构； \n    3）在内存中生成一个该类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。\n## 2.2 连接  \n### 2.2.1. 验证\n验证是连接阶段的第一步，主要确保加载进来的字节流符合JVM规范。 \n验证阶段会完成以下4个阶段的检验动作： \n        1）文件格式验证 \n        2）元数据验证(是否符合Java语言规范) \n        3）字节码验证（确定程序语义合法，符合逻辑） \n        4）符号引用验证（确保下一步的解析能正常执行）\n### 2.2.2. 准备  \n准备阶段是正式为类变量分配内存并设置类变量的初始值阶段，即在方法区中分配这些变量所使用的内存空间。注意这里所说的初始值概念，比如一个类变量定义为：\n```java\n    public static int v = 8080;\n```\n实际上变量v在准备阶段过后的初始值为0而不是8080，将v赋值为8080的putstatic指令是程序被编译后，存放于类构造器<client>方法之中。\n但是注意如果声明为：\n```java\npublic static final int v = 8080;\n```\n在编译阶段会为v生成ConstantValue属性，在准备阶段虚拟机会根据ConstantValue属性将v赋值为8080。\n### 2.2.3. 解析 \n解析阶段是指虚拟机将常量池中的符号引用替换为直接引用的过程。符号引用就是class文件中的：\n```text\nCONSTANT_Class_info\nCONSTANT_Field_info\nCONSTANT_Method_info\n```\n等类型的常量。  \n下面我们解释一下符号引用和直接引用的概念：  \n符号引用与虚拟机实现的布局无关，引用的目标并不一定要已经加载到内存中。各种虚拟机实现的内存布局可以各不相同，但是它们能接受的符号引用必须是一致的，因为符号引用的字面量形式明确定义在Java虚拟机规范的Class文件格式中。\n直接引用可以是指向目标的指针，相对偏移量或是一个能间接定位到目标的句柄。如果有了直接引用，那引用的目标必定已经在内存中存在。\n## 2.3 初始化 \n初始化阶段是类加载过程的最后一步，主要是根据程序中的赋值语句主动为类变量赋值。 \n注： \n1）当有父类且父类为初始化的时候，先去初始化父类； \n2）再进行子类初始化语句。\n# 三、Jvm加载的过程图例\n![类的加载过程](JAVA-类加载机制/class-loader-uml.jpg)  \n\n## 什么时候需要对类进行初始化？     \n1）使用new该类实例化对象的时候； \n2）读取或设置类静态字段的时候（但被final修饰的字段，在编译器时就被放入常量池的静态字段除外static final）； \n3）调用类静态方法的时候； \n4）使用反射Class.forName(“xxxx”)对类进行反射调用的时候，该类需要初始化； \n5）初始化一个类的时候，有父类，先初始化父类（注：1. 接口除外，父接口在调用的时候才会被初始化；2.子类引用父类静态字段，只会引发父类初始化）； \n6）被标明为启动类的类（即包含main()方法的类）要初始化； \n7）当使用JDK1.7的动态语言支持时，如果一个java.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化。\n## 什么时候不会初始化？\n1）通过子类引用父类的静态字段，只会触发父类的初始化，而不会触发子类的初始化。\n2）定义对象数组，不会触发该类的初始化。\n3）常量在编译期间会存入调用类的常量池中，本质上并没有直接引用定义常量的类，不会触发定义常量所在的类。\n4）通过类名获取Class对象，不会触发类的初始化。\n5）通过Class.forName加载指定类时，如果指定参数initialize为false时，也不会触发类初始化，其实这个参数是告诉虚拟机，是否要对类进行初始化。\n6）通过ClassLoader默认的loadClass方法，也不会触发初始化动作。\n\n# 四、类加载器 \n类加载器负责对类的加载，加载类的方式有：\n1）从本地系统直接加载\n2）通过网络下载.class文件\n3）从zip，jar等归档文件中加载.class文件\n4）从专有数据库中提取.class文件\n5）将Java源文件动态编译为.class文件（服务器）  \n\n![类加载器](JAVA-类加载机制/class-loader.png)    \n                                                                                                                                                                      \n        \n    ","source":"_posts/JAVA-类加载机制.md","raw":"---\ntitle: JAVA 类加载机制\ndate: 2017-11-05 14:10:10\ntags: [JAVA,JVM]\ncategory: 基础知识\n---\n> 摘自：[https://blog.csdn.net/qq_16216221/article/details/71600535](https://blog.csdn.net/qq_16216221/article/details/71600535)  \n摘自：[http://www.importnew.com/25295.html](http://www.importnew.com/25295.html)\n摘自：[https://blog.csdn.net/noaman_wgs/article/details/74489549](https://blog.csdn.net/noaman_wgs/article/details/74489549)  \n\n# 一、概述\n类加载是Java程序运行的第一步，研究类的加载有助于了解JVM执行过程，并指导开发者采取更有效的措施配合程序执行，对理解java虚拟机的连接模型和java语言的动态性都有很大帮助。   \n由于Java的跨平台性，经过编译的Java源程序并不是一个可执行程序，而是一个或多个类文件。当Java程序需要使用某个类时，JVM会确保这个类已经被加载、连接（验证、准备和解析）和初始化。  \nJVM中类的装载是由类加载器（ClassLoader）和它的子类来实现的，Java中的类加载器是一个重要的Java运行时系统组件，它负责在运行时查找和装入类文件中的类。  \n<!-- more -->\n# 二、类加载机制  \n![类的加载过程](JAVA-类加载机制/class-load-mechanism.png)  \n## 2.1. 加载  \n  加载主要是将.class文件（并不一定是.class。可以是ZIP包，网络中获取）中的二进制字节流读入到JVM中。 \n    在加载阶段，JVM需要完成3件事： \n    1）通过类的全限定名获取该类的二进制字节流； \n    2）将字节流所代表的静态存储结构转化为方法区的运行时数据结构； \n    3）在内存中生成一个该类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。\n## 2.2 连接  \n### 2.2.1. 验证\n验证是连接阶段的第一步，主要确保加载进来的字节流符合JVM规范。 \n验证阶段会完成以下4个阶段的检验动作： \n        1）文件格式验证 \n        2）元数据验证(是否符合Java语言规范) \n        3）字节码验证（确定程序语义合法，符合逻辑） \n        4）符号引用验证（确保下一步的解析能正常执行）\n### 2.2.2. 准备  \n准备阶段是正式为类变量分配内存并设置类变量的初始值阶段，即在方法区中分配这些变量所使用的内存空间。注意这里所说的初始值概念，比如一个类变量定义为：\n```java\n    public static int v = 8080;\n```\n实际上变量v在准备阶段过后的初始值为0而不是8080，将v赋值为8080的putstatic指令是程序被编译后，存放于类构造器<client>方法之中。\n但是注意如果声明为：\n```java\npublic static final int v = 8080;\n```\n在编译阶段会为v生成ConstantValue属性，在准备阶段虚拟机会根据ConstantValue属性将v赋值为8080。\n### 2.2.3. 解析 \n解析阶段是指虚拟机将常量池中的符号引用替换为直接引用的过程。符号引用就是class文件中的：\n```text\nCONSTANT_Class_info\nCONSTANT_Field_info\nCONSTANT_Method_info\n```\n等类型的常量。  \n下面我们解释一下符号引用和直接引用的概念：  \n符号引用与虚拟机实现的布局无关，引用的目标并不一定要已经加载到内存中。各种虚拟机实现的内存布局可以各不相同，但是它们能接受的符号引用必须是一致的，因为符号引用的字面量形式明确定义在Java虚拟机规范的Class文件格式中。\n直接引用可以是指向目标的指针，相对偏移量或是一个能间接定位到目标的句柄。如果有了直接引用，那引用的目标必定已经在内存中存在。\n## 2.3 初始化 \n初始化阶段是类加载过程的最后一步，主要是根据程序中的赋值语句主动为类变量赋值。 \n注： \n1）当有父类且父类为初始化的时候，先去初始化父类； \n2）再进行子类初始化语句。\n# 三、Jvm加载的过程图例\n![类的加载过程](JAVA-类加载机制/class-loader-uml.jpg)  \n\n## 什么时候需要对类进行初始化？     \n1）使用new该类实例化对象的时候； \n2）读取或设置类静态字段的时候（但被final修饰的字段，在编译器时就被放入常量池的静态字段除外static final）； \n3）调用类静态方法的时候； \n4）使用反射Class.forName(“xxxx”)对类进行反射调用的时候，该类需要初始化； \n5）初始化一个类的时候，有父类，先初始化父类（注：1. 接口除外，父接口在调用的时候才会被初始化；2.子类引用父类静态字段，只会引发父类初始化）； \n6）被标明为启动类的类（即包含main()方法的类）要初始化； \n7）当使用JDK1.7的动态语言支持时，如果一个java.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化。\n## 什么时候不会初始化？\n1）通过子类引用父类的静态字段，只会触发父类的初始化，而不会触发子类的初始化。\n2）定义对象数组，不会触发该类的初始化。\n3）常量在编译期间会存入调用类的常量池中，本质上并没有直接引用定义常量的类，不会触发定义常量所在的类。\n4）通过类名获取Class对象，不会触发类的初始化。\n5）通过Class.forName加载指定类时，如果指定参数initialize为false时，也不会触发类初始化，其实这个参数是告诉虚拟机，是否要对类进行初始化。\n6）通过ClassLoader默认的loadClass方法，也不会触发初始化动作。\n\n# 四、类加载器 \n类加载器负责对类的加载，加载类的方式有：\n1）从本地系统直接加载\n2）通过网络下载.class文件\n3）从zip，jar等归档文件中加载.class文件\n4）从专有数据库中提取.class文件\n5）将Java源文件动态编译为.class文件（服务器）  \n\n![类加载器](JAVA-类加载机制/class-loader.png)    \n                                                                                                                                                                      \n        \n    ","slug":"JAVA-类加载机制","published":1,"updated":"2019-03-31T12:12:21.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtwwxrar0007fyimi8wdbkjb","content":"<blockquote>\n<p>摘自：<a href=\"https://blog.csdn.net/qq_16216221/article/details/71600535\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_16216221/article/details/71600535</a><br>摘自：<a href=\"http://www.importnew.com/25295.html\" target=\"_blank\" rel=\"noopener\">http://www.importnew.com/25295.html</a><br>摘自：<a href=\"https://blog.csdn.net/noaman_wgs/article/details/74489549\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/noaman_wgs/article/details/74489549</a>  </p>\n</blockquote>\n<h1 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h1><p>类加载是Java程序运行的第一步，研究类的加载有助于了解JVM执行过程，并指导开发者采取更有效的措施配合程序执行，对理解java虚拟机的连接模型和java语言的动态性都有很大帮助。<br>由于Java的跨平台性，经过编译的Java源程序并不是一个可执行程序，而是一个或多个类文件。当Java程序需要使用某个类时，JVM会确保这个类已经被加载、连接（验证、准备和解析）和初始化。<br>JVM中类的装载是由类加载器（ClassLoader）和它的子类来实现的，Java中的类加载器是一个重要的Java运行时系统组件，它负责在运行时查找和装入类文件中的类。<br><a id=\"more\"></a></p>\n<h1 id=\"二、类加载机制\"><a href=\"#二、类加载机制\" class=\"headerlink\" title=\"二、类加载机制\"></a>二、类加载机制</h1><p><img src=\"/2017/11/05/JAVA-类加载机制/class-load-mechanism.png\" alt=\"类的加载过程\">  </p>\n<h2 id=\"2-1-加载\"><a href=\"#2-1-加载\" class=\"headerlink\" title=\"2.1. 加载\"></a>2.1. 加载</h2><p>  加载主要是将.class文件（并不一定是.class。可以是ZIP包，网络中获取）中的二进制字节流读入到JVM中。<br>    在加载阶段，JVM需要完成3件事：<br>    1）通过类的全限定名获取该类的二进制字节流；<br>    2）将字节流所代表的静态存储结构转化为方法区的运行时数据结构；<br>    3）在内存中生成一个该类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。</p>\n<h2 id=\"2-2-连接\"><a href=\"#2-2-连接\" class=\"headerlink\" title=\"2.2 连接\"></a>2.2 连接</h2><h3 id=\"2-2-1-验证\"><a href=\"#2-2-1-验证\" class=\"headerlink\" title=\"2.2.1. 验证\"></a>2.2.1. 验证</h3><p>验证是连接阶段的第一步，主要确保加载进来的字节流符合JVM规范。<br>验证阶段会完成以下4个阶段的检验动作：<br>        1）文件格式验证<br>        2）元数据验证(是否符合Java语言规范)<br>        3）字节码验证（确定程序语义合法，符合逻辑）<br>        4）符号引用验证（确保下一步的解析能正常执行）</p>\n<h3 id=\"2-2-2-准备\"><a href=\"#2-2-2-准备\" class=\"headerlink\" title=\"2.2.2. 准备\"></a>2.2.2. 准备</h3><p>准备阶段是正式为类变量分配内存并设置类变量的初始值阶段，即在方法区中分配这些变量所使用的内存空间。注意这里所说的初始值概念，比如一个类变量定义为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> v = <span class=\"number\">8080</span>;</span><br></pre></td></tr></table></figure></p>\n<p>实际上变量v在准备阶段过后的初始值为0而不是8080，将v赋值为8080的putstatic指令是程序被编译后，存放于类构造器<client>方法之中。<br>但是注意如果声明为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> v = <span class=\"number\">8080</span>;</span><br></pre></td></tr></table></figure></client></p>\n<p>在编译阶段会为v生成ConstantValue属性，在准备阶段虚拟机会根据ConstantValue属性将v赋值为8080。</p>\n<h3 id=\"2-2-3-解析\"><a href=\"#2-2-3-解析\" class=\"headerlink\" title=\"2.2.3. 解析\"></a>2.2.3. 解析</h3><p>解析阶段是指虚拟机将常量池中的符号引用替换为直接引用的过程。符号引用就是class文件中的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONSTANT_Class_info</span><br><span class=\"line\">CONSTANT_Field_info</span><br><span class=\"line\">CONSTANT_Method_info</span><br></pre></td></tr></table></figure></p>\n<p>等类型的常量。<br>下面我们解释一下符号引用和直接引用的概念：<br>符号引用与虚拟机实现的布局无关，引用的目标并不一定要已经加载到内存中。各种虚拟机实现的内存布局可以各不相同，但是它们能接受的符号引用必须是一致的，因为符号引用的字面量形式明确定义在Java虚拟机规范的Class文件格式中。<br>直接引用可以是指向目标的指针，相对偏移量或是一个能间接定位到目标的句柄。如果有了直接引用，那引用的目标必定已经在内存中存在。</p>\n<h2 id=\"2-3-初始化\"><a href=\"#2-3-初始化\" class=\"headerlink\" title=\"2.3 初始化\"></a>2.3 初始化</h2><p>初始化阶段是类加载过程的最后一步，主要是根据程序中的赋值语句主动为类变量赋值。<br>注：<br>1）当有父类且父类为初始化的时候，先去初始化父类；<br>2）再进行子类初始化语句。</p>\n<h1 id=\"三、Jvm加载的过程图例\"><a href=\"#三、Jvm加载的过程图例\" class=\"headerlink\" title=\"三、Jvm加载的过程图例\"></a>三、Jvm加载的过程图例</h1><p><img src=\"/2017/11/05/JAVA-类加载机制/class-loader-uml.jpg\" alt=\"类的加载过程\">  </p>\n<h2 id=\"什么时候需要对类进行初始化？\"><a href=\"#什么时候需要对类进行初始化？\" class=\"headerlink\" title=\"什么时候需要对类进行初始化？\"></a>什么时候需要对类进行初始化？</h2><p>1）使用new该类实例化对象的时候；<br>2）读取或设置类静态字段的时候（但被final修饰的字段，在编译器时就被放入常量池的静态字段除外static final）；<br>3）调用类静态方法的时候；<br>4）使用反射Class.forName(“xxxx”)对类进行反射调用的时候，该类需要初始化；<br>5）初始化一个类的时候，有父类，先初始化父类（注：1. 接口除外，父接口在调用的时候才会被初始化；2.子类引用父类静态字段，只会引发父类初始化）；<br>6）被标明为启动类的类（即包含main()方法的类）要初始化；<br>7）当使用JDK1.7的动态语言支持时，如果一个java.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化。</p>\n<h2 id=\"什么时候不会初始化？\"><a href=\"#什么时候不会初始化？\" class=\"headerlink\" title=\"什么时候不会初始化？\"></a>什么时候不会初始化？</h2><p>1）通过子类引用父类的静态字段，只会触发父类的初始化，而不会触发子类的初始化。<br>2）定义对象数组，不会触发该类的初始化。<br>3）常量在编译期间会存入调用类的常量池中，本质上并没有直接引用定义常量的类，不会触发定义常量所在的类。<br>4）通过类名获取Class对象，不会触发类的初始化。<br>5）通过Class.forName加载指定类时，如果指定参数initialize为false时，也不会触发类初始化，其实这个参数是告诉虚拟机，是否要对类进行初始化。<br>6）通过ClassLoader默认的loadClass方法，也不会触发初始化动作。</p>\n<h1 id=\"四、类加载器\"><a href=\"#四、类加载器\" class=\"headerlink\" title=\"四、类加载器\"></a>四、类加载器</h1><p>类加载器负责对类的加载，加载类的方式有：<br>1）从本地系统直接加载<br>2）通过网络下载.class文件<br>3）从zip，jar等归档文件中加载.class文件<br>4）从专有数据库中提取.class文件<br>5）将Java源文件动态编译为.class文件（服务器）  </p>\n<p><img src=\"/2017/11/05/JAVA-类加载机制/class-loader.png\" alt=\"类加载器\">    </p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>摘自：<a href=\"https://blog.csdn.net/qq_16216221/article/details/71600535\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_16216221/article/details/71600535</a><br>摘自：<a href=\"http://www.importnew.com/25295.html\" target=\"_blank\" rel=\"noopener\">http://www.importnew.com/25295.html</a><br>摘自：<a href=\"https://blog.csdn.net/noaman_wgs/article/details/74489549\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/noaman_wgs/article/details/74489549</a>  </p>\n</blockquote>\n<h1 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h1><p>类加载是Java程序运行的第一步，研究类的加载有助于了解JVM执行过程，并指导开发者采取更有效的措施配合程序执行，对理解java虚拟机的连接模型和java语言的动态性都有很大帮助。<br>由于Java的跨平台性，经过编译的Java源程序并不是一个可执行程序，而是一个或多个类文件。当Java程序需要使用某个类时，JVM会确保这个类已经被加载、连接（验证、准备和解析）和初始化。<br>JVM中类的装载是由类加载器（ClassLoader）和它的子类来实现的，Java中的类加载器是一个重要的Java运行时系统组件，它负责在运行时查找和装入类文件中的类。<br></p>","more":"<p></p>\n<h1 id=\"二、类加载机制\"><a href=\"#二、类加载机制\" class=\"headerlink\" title=\"二、类加载机制\"></a>二、类加载机制</h1><p><img src=\"/2017/11/05/JAVA-类加载机制/class-load-mechanism.png\" alt=\"类的加载过程\">  </p>\n<h2 id=\"2-1-加载\"><a href=\"#2-1-加载\" class=\"headerlink\" title=\"2.1. 加载\"></a>2.1. 加载</h2><p>  加载主要是将.class文件（并不一定是.class。可以是ZIP包，网络中获取）中的二进制字节流读入到JVM中。<br>    在加载阶段，JVM需要完成3件事：<br>    1）通过类的全限定名获取该类的二进制字节流；<br>    2）将字节流所代表的静态存储结构转化为方法区的运行时数据结构；<br>    3）在内存中生成一个该类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。</p>\n<h2 id=\"2-2-连接\"><a href=\"#2-2-连接\" class=\"headerlink\" title=\"2.2 连接\"></a>2.2 连接</h2><h3 id=\"2-2-1-验证\"><a href=\"#2-2-1-验证\" class=\"headerlink\" title=\"2.2.1. 验证\"></a>2.2.1. 验证</h3><p>验证是连接阶段的第一步，主要确保加载进来的字节流符合JVM规范。<br>验证阶段会完成以下4个阶段的检验动作：<br>        1）文件格式验证<br>        2）元数据验证(是否符合Java语言规范)<br>        3）字节码验证（确定程序语义合法，符合逻辑）<br>        4）符号引用验证（确保下一步的解析能正常执行）</p>\n<h3 id=\"2-2-2-准备\"><a href=\"#2-2-2-准备\" class=\"headerlink\" title=\"2.2.2. 准备\"></a>2.2.2. 准备</h3><p>准备阶段是正式为类变量分配内存并设置类变量的初始值阶段，即在方法区中分配这些变量所使用的内存空间。注意这里所说的初始值概念，比如一个类变量定义为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> v = <span class=\"number\">8080</span>;</span><br></pre></td></tr></table></figure></p>\n<p>实际上变量v在准备阶段过后的初始值为0而不是8080，将v赋值为8080的putstatic指令是程序被编译后，存放于类构造器<client>方法之中。<br>但是注意如果声明为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> v = <span class=\"number\">8080</span>;</span><br></pre></td></tr></table></figure></client></p>\n<p>在编译阶段会为v生成ConstantValue属性，在准备阶段虚拟机会根据ConstantValue属性将v赋值为8080。</p>\n<h3 id=\"2-2-3-解析\"><a href=\"#2-2-3-解析\" class=\"headerlink\" title=\"2.2.3. 解析\"></a>2.2.3. 解析</h3><p>解析阶段是指虚拟机将常量池中的符号引用替换为直接引用的过程。符号引用就是class文件中的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONSTANT_Class_info</span><br><span class=\"line\">CONSTANT_Field_info</span><br><span class=\"line\">CONSTANT_Method_info</span><br></pre></td></tr></table></figure></p>\n<p>等类型的常量。<br>下面我们解释一下符号引用和直接引用的概念：<br>符号引用与虚拟机实现的布局无关，引用的目标并不一定要已经加载到内存中。各种虚拟机实现的内存布局可以各不相同，但是它们能接受的符号引用必须是一致的，因为符号引用的字面量形式明确定义在Java虚拟机规范的Class文件格式中。<br>直接引用可以是指向目标的指针，相对偏移量或是一个能间接定位到目标的句柄。如果有了直接引用，那引用的目标必定已经在内存中存在。</p>\n<h2 id=\"2-3-初始化\"><a href=\"#2-3-初始化\" class=\"headerlink\" title=\"2.3 初始化\"></a>2.3 初始化</h2><p>初始化阶段是类加载过程的最后一步，主要是根据程序中的赋值语句主动为类变量赋值。<br>注：<br>1）当有父类且父类为初始化的时候，先去初始化父类；<br>2）再进行子类初始化语句。</p>\n<h1 id=\"三、Jvm加载的过程图例\"><a href=\"#三、Jvm加载的过程图例\" class=\"headerlink\" title=\"三、Jvm加载的过程图例\"></a>三、Jvm加载的过程图例</h1><p><img src=\"/2017/11/05/JAVA-类加载机制/class-loader-uml.jpg\" alt=\"类的加载过程\">  </p>\n<h2 id=\"什么时候需要对类进行初始化？\"><a href=\"#什么时候需要对类进行初始化？\" class=\"headerlink\" title=\"什么时候需要对类进行初始化？\"></a>什么时候需要对类进行初始化？</h2><p>1）使用new该类实例化对象的时候；<br>2）读取或设置类静态字段的时候（但被final修饰的字段，在编译器时就被放入常量池的静态字段除外static final）；<br>3）调用类静态方法的时候；<br>4）使用反射Class.forName(“xxxx”)对类进行反射调用的时候，该类需要初始化；<br>5）初始化一个类的时候，有父类，先初始化父类（注：1. 接口除外，父接口在调用的时候才会被初始化；2.子类引用父类静态字段，只会引发父类初始化）；<br>6）被标明为启动类的类（即包含main()方法的类）要初始化；<br>7）当使用JDK1.7的动态语言支持时，如果一个java.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化。</p>\n<h2 id=\"什么时候不会初始化？\"><a href=\"#什么时候不会初始化？\" class=\"headerlink\" title=\"什么时候不会初始化？\"></a>什么时候不会初始化？</h2><p>1）通过子类引用父类的静态字段，只会触发父类的初始化，而不会触发子类的初始化。<br>2）定义对象数组，不会触发该类的初始化。<br>3）常量在编译期间会存入调用类的常量池中，本质上并没有直接引用定义常量的类，不会触发定义常量所在的类。<br>4）通过类名获取Class对象，不会触发类的初始化。<br>5）通过Class.forName加载指定类时，如果指定参数initialize为false时，也不会触发类初始化，其实这个参数是告诉虚拟机，是否要对类进行初始化。<br>6）通过ClassLoader默认的loadClass方法，也不会触发初始化动作。</p>\n<h1 id=\"四、类加载器\"><a href=\"#四、类加载器\" class=\"headerlink\" title=\"四、类加载器\"></a>四、类加载器</h1><p>类加载器负责对类的加载，加载类的方式有：<br>1）从本地系统直接加载<br>2）通过网络下载.class文件<br>3）从zip，jar等归档文件中加载.class文件<br>4）从专有数据库中提取.class文件<br>5）将Java源文件动态编译为.class文件（服务器）  </p>\n<p><img src=\"/2017/11/05/JAVA-类加载机制/class-loader.png\" alt=\"类加载器\">    </p>"}],"PostAsset":[{"_id":"source/_posts/Database-Change-Notification/dba_change_notification_regs_info.png","post":"cjtwwxrae0002fyimzdc4jtr9","slug":"dba_change_notification_regs_info.png","modified":1,"renderable":1},{"_id":"source/_posts/JAVA-类加载机制/class-load-mechanism.png","post":"cjtwwxrar0007fyimi8wdbkjb","slug":"class-load-mechanism.png","modified":1,"renderable":1},{"_id":"source/_posts/JAVA-类加载机制/class-loader-uml.jpg","post":"cjtwwxrar0007fyimi8wdbkjb","slug":"class-loader-uml.jpg","modified":1,"renderable":1},{"_id":"source/_posts/JAVA-类加载机制/class-loader.png","post":"cjtwwxrar0007fyimi8wdbkjb","slug":"class-loader.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjtwwxra30000fyim3szocoig","category_id":"cjtwwxral0004fyimdpytsn6f","_id":"cjtwwxrav000afyim93bkh375"},{"post_id":"cjtwwxrap0006fyimxpba0082","category_id":"cjtwwxrat0008fyimcc2hwgqv","_id":"cjtwwxrb0000ffyimnp2bcg5e"},{"post_id":"cjtwwxrar0007fyimi8wdbkjb","category_id":"cjtwwxrav000bfyimfck14txc","_id":"cjtwwxrb1000ifyim0go6far7"}],"PostTag":[{"post_id":"cjtwwxra30000fyim3szocoig","tag_id":"cjtwwxrao0005fyim8m2hro5r","_id":"cjtwwxraw000dfyim5c5snsup"},{"post_id":"cjtwwxra30000fyim3szocoig","tag_id":"cjtwwxrat0009fyimvzoscm5j","_id":"cjtwwxrb0000efyimahl0j4jd"},{"post_id":"cjtwwxrae0002fyimzdc4jtr9","tag_id":"cjtwwxrav000cfyimbac4dia3","_id":"cjtwwxrb1000hfyimu66btznl"},{"post_id":"cjtwwxrap0006fyimxpba0082","tag_id":"cjtwwxrb0000gfyimvcpr3qbp","_id":"cjtwwxrb2000kfyimhbdyge1i"},{"post_id":"cjtwwxrar0007fyimi8wdbkjb","tag_id":"cjtwwxrb2000jfyimcb09gl88","_id":"cjtwwxrb3000mfyimcc2d0io5"},{"post_id":"cjtwwxrar0007fyimi8wdbkjb","tag_id":"cjtwwxrb2000lfyim3f5jr97d","_id":"cjtwwxrb3000nfyimsey5vvto"}],"Tag":[{"name":"Hexo","_id":"cjtwwxrao0005fyim8m2hro5r"},{"name":"JS","_id":"cjtwwxrat0009fyimvzoscm5j"},{"name":"Oracle","_id":"cjtwwxrav000cfyimbac4dia3"},{"name":"Elastic","_id":"cjtwwxrb0000gfyimvcpr3qbp"},{"name":"JAVA","_id":"cjtwwxrb2000jfyimcb09gl88"},{"name":"JVM","_id":"cjtwwxrb2000lfyim3f5jr97d"}]}}